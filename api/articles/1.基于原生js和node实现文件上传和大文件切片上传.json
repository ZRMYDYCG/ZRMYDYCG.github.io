{"title":"前后端通信常用的数据格式","uid":"e149d08797465a80ca26c5e88e2e8f05","slug":"1.基于原生js和node实现文件上传和大文件切片上传","date":"2024-06-16T11:56:58.000Z","updated":"2024-11-06T12:48:31.757Z","comments":true,"path":"api/articles/1.基于原生js和node实现文件上传和大文件切片上传.json","keywords":null,"cover":null,"content":"<p>如下数据格式是在前后端通信过程中常用到的:</p>\n<p>1、application&#x2F;json:</p>\n<p>这种格式将数据转换成JSON格式的字符串。</p>\n<p>例如，如果有一个JavaScript对象{“name”: “John”, “age”: 30}，它将被转换成字符串”{&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30}”。</p>\n<p>这种格式通常用于API请求，其中前后端交换复杂的数据结构。</p>\n<p>2、multipart&#x2F;form-data:</p>\n<p>这种格式将数据封装为一系列的部分（parts），每个部分可以是文本或文件。</p>\n<p>每个部分都有自己的头部信息，包括内容类型（Content-Type）和内容长度（Content-Length）。</p>\n<p>例如，上传文件时，文件内容会作为二进制数据包含在请求体中，同时请求体还会包含文件名和文件类型等信息。</p>\n<p>3、application&#x2F;x-www-form-urlencoded:</p>\n<p>这种格式将数据转换成键值对的形式，并通过URL编码。</p>\n<p>例如，表单数据name&#x3D;John&amp;age&#x3D;30会被直接发送到服务器。</p>\n<p>这种格式适合传输少量的文本数据，并且通常用于GET或POST请求。</p>\n<p>4、Buffer:</p>\n<p>在Node.js中，Buffer用于处理二进制数据。</p>\n<p>当使用Buffer上传文件时，文件会被读取为二进制数据，然后作为请求的一部分发送。</p>\n<p>Buffer通常与multipart&#x2F;form-data一起使用，以支持文件上传。</p>\n<p>每种格式都有其特定的编码方式和用途。application&#x2F;json适合结构化数据的传输，multipart&#x2F;form-data适合文件和二进制数据的传输，application&#x2F;x-www-form-urlencoded适合简单的表单数据传输，而Buffer则用于处理二进制数据，尤其是在Node.js环境中。</p>\n","feature":true,"text":"如下数据格式是在前后端通信过程中常用到的: 1、application&#x2F;json: 这种格式将数据转换成JSON格式的字符串。 例如，如果有一个Jav...","permalink":"/post/1.基于原生js和node实现文件上传和大文件切片上传","photos":[],"count_time":{"symbolsCount":841,"symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"instanceof运算符的作用和核心原理、手写实现instanceof","uid":"a9f8557ca7080d70ea4e6c836e38c7fb","slug":"2.instanceof运算符的作用和核心原理、手写实现instanceof","date":"2024-06-17T07:17:21.000Z","updated":"2024-06-17T07:32:21.577Z","comments":true,"path":"api/articles/2.instanceof运算符的作用和核心原理、手写实现instanceof.json","keywords":null,"cover":[],"text":"instanceof 运算符的作用 用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上 ，返回一个布尔值: 也即是否存在构造函数的原型...","permalink":"/post/2.instanceof运算符的作用和核心原理、手写实现instanceof","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"feature":true},"next_post":{"title":"821.字符串的最短距离-力扣（LeetCode）","uid":"a20f42ee8373946d2898ea566c51817c","slug":"LeetCode/821-字符串的最短距离-力扣（LeetCode）","date":"2024-02-07T09:59:44.000Z","updated":"2024-02-20T05:13:17.814Z","comments":true,"path":"api/articles/LeetCode/821-字符串的最短距离-力扣（LeetCode）.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c355a99f345e8d0307dcc8.png","text":"题目详情简单 给你一个字符串 s 和一个字符 c ，且 c 是 s 中出现过的字符。返回一个整数数组 answer ，其中 answer.length &#x3...","permalink":"/post/LeetCode/821-字符串的最短距离-力扣（LeetCode）","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":1,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"LeetCode 解题报告","slug":"LeetCode-解题报告","count":1,"path":"api/tags/LeetCode-解题报告.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}}}