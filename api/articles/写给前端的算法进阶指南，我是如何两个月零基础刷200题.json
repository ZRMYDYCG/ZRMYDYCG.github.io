{"title":"写给前端的算法进阶指南，我是如何两个月零基础刷200题","uid":"86a4064166753da9cd1727d393773670","slug":"写给前端的算法进阶指南，我是如何两个月零基础刷200题","date":"2024-02-11T12:16:01.000Z","updated":"2024-02-11T12:23:00.936Z","comments":true,"path":"api/articles/写给前端的算法进阶指南，我是如何两个月零基础刷200题.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c8bc179f345e8d032ba300.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近国内大厂面试中，出现 LeetCode 真题考察的频率越来越高了。我也观察到有越来越多的前端同学开始关注算法这个话题。</p>\n<p>但是算法是一个门槛很高的东西，在一个算法新手的眼里，它的智商门槛要求很高。事实上是这个样子的吗？如果你怀疑自己的智商不够去学习算法，那么你一定要先看完这篇文章：《天生不聪明》，也正是这篇文章激励了我开始了算法之路。</p>\n<p>这篇文章，我会先总结几个必学的题目分类，给出这个分类下必做例题的详细题解，并且在文章的末尾给出每个分类下必刷的题目的获取方式。</p>\n<p>一定要耐心看到底，会有重磅干货。</p>\n<h2 id=\"心路\"><a href=\"#心路\" class=\"headerlink\" title=\"心路\"></a>心路</h2><p>我从 5 月份准备离职的时候开始学习算法，在此之前对于算法我是零基础，在最开始我对于算法的感受也和大家一样，觉得自己智商可能不够，望而却步。但是看了一些大佬对于算法和智商之间的关系，我发现算法好像也是一个通过练习可以慢慢成长的学科，而不是只有智商达到了某个点才能有入场券，所以我开始了我的算法之路。通过视频课程 + 分类刷题 + 总结题解 + 回头复习的方式，我在两个月的时间里把力扣的解题数量刷到了200题。对于一个算法新人来说，这应该算是一个还可以的成绩，这篇文章，我把我总结的一些学习心得，和一些经典例题分享给大家。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65c85fae9f345e8d031f3c0a.jpg\"></p>\n<h2 id=\"学习方式\"><a href=\"#学习方式\" class=\"headerlink\" title=\"学习方式\"></a>学习方式</h2><ol>\n<li><p><strong>分类刷题</strong>：很多第一次接触力扣的同学对于刷题的方法不太了解，有的人跟着题号刷，有的人跟着每日一题刷，但是这种漫无目的的刷题方式一般都会在中途某一天放弃，或者刷了很久但是却发现没什么沉淀。这里不啰嗦，直接点明一个所有大佬都推荐的刷题方法：把自己的学习阶段分散成几个时间段去刷不同分类的题型，比如第一周专门解<strong>链表</strong>相关题型，第二周专门解<strong>二叉树</strong>相关题型。这样你的知识会形成一个体系，通过一段时间的刻意练习把这个题型相关的知识点强化到你的脑海中，不容易遗忘。</p>\n</li>\n<li><p><strong>适当放弃</strong>：很多同学遇到一个难题，非得埋头钻研，干他 2 个小时。最后挫败感十足，久而久之可能就放弃了算法之路。要知道算法是个沉淀了几十年的领域，题解里的某个算法可能是某些教授研究很多年的心血，你想靠自己一个新手去想出来同等优秀的解法，岂不是想太多了。所以要学会适当放弃，一般来说，比较有目的性（面试）刷题的同学，他面对一道新的题目毫无头绪的话，会在 10 分钟之内直接放弃去看题解，然后记录下来，<strong>反复复习</strong>，直到这个解法成为自己的知识为止。这是效率最高的学习办法。</p>\n</li>\n<li><p><strong>接受自己是新手</strong>：没错，说的难听一点，接受自己不是天才这个现实。你在刷题的过程中会遇到很多困扰你的时候，比如相同的题型已经看过例题，<strong>稍微变了条件就解不出来</strong>。或者对于一个 <strong><code>easy</code> 难度的题毫无头绪</strong>。或者甚至<strong>看不懂别人的题解</strong>（没错我经常）相信我，这很正常，不能说明你不适合学习算法，只能说明算法确实是一个博大精深的领域，把自己在其他领域的沉淀抛开来，接受自己是新手这个事实，多看题解，多请教别人。</p>\n</li>\n</ol>\n<h2 id=\"分类大纲\"><a href=\"#分类大纲\" class=\"headerlink\" title=\"分类大纲\"></a>分类大纲</h2><ol>\n<li><p>算法的复杂度分析。</p>\n</li>\n<li><p>排序算法，以及他们的区别和优化。</p>\n</li>\n<li><p>数组中的双指针、滑动窗口思想。</p>\n</li>\n<li><p>利用 Map 和 Set 处理查找表问题。</p>\n</li>\n<li><p>链表的各种问题。</p>\n</li>\n<li><p>利用递归和迭代法解决二叉树问题。</p>\n</li>\n<li><p>栈、队列、DFS、BFS。</p>\n</li>\n<li><p>回溯法、贪心算法、动态规划。</p>\n</li>\n</ol>\n<h2 id=\"题解\"><a href=\"#题解\" class=\"headerlink\" title=\"题解\"></a>题解</h2><p>接下来我会放出几个分类的经典题型，以及我对应的讲解，当做开胃菜，并且在文章的末尾我会给出获取每个分类<strong>推荐你去刷</strong>的题目的合集，记得看到底哦。</p>\n<h3 id=\"查找表问题\"><a href=\"#查找表问题\" class=\"headerlink\" title=\"查找表问题\"></a>查找表问题</h3><p>两个数组的交集 II-350</p>\n<p>给定两个数组，编写一个函数来计算它们的交集。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">示例 1:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入: nums1 </span><span style=\"color: #CCCCCC\">= [1,2,2,1], nums2 = [2,2]  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: [2,2]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">示例 2:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入: nums1 </span><span style=\"color: #CCCCCC\">= [4,9,5], nums2 = [9,4,9,8,4]  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: [4,9]</span></span></code></pre></div><p>来源：力扣（LeetCode）<br>链接：<a href=\"https://leetcode-cn.com/problems/intersection-of-two-arrays-ii\">https://leetcode-cn.com/problems/intersection-of-two-arrays-ii</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>为两个数组分别建立 map，用来存储 num -&gt; count 的键值对，统计每个数字出现的数量。</p>\n<p>然后对其中一个 map 进行遍历，查看这个数字在两个数组中分别出现的数量，<strong>取出现的最小的那个数量</strong>（比如数组 1 中出现了 1 次，数组 2 中出现了 2 次，那么交集应该取 1 次），push 到结果数组中即可。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">/**  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\"> nums1  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\"> nums2  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">return</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> */</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">intersect</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">nums1</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">nums2</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> map1 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">makeCountMap</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">nums1</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> map2 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">makeCountMap</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">nums2</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> res </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> num </span><span style=\"color: #9569EC\">of</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">map1</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">keys</span><span style=\"color: #505153\">())</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> count1 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">map1</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">get</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">num</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> count2 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">map2</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">get</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">num</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">count2</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> pushCount </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Math</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">min</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">count1</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> count2</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> pushCount</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">res</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">num</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> res  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">makeCountMap</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> map </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">new</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">Map</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> num </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> nums</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> count </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">map</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">get</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">num</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">count</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #61D0FF\">map</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">set</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">num</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> count </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #61D0FF\">map</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">set</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">num</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> map  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"双指针问题\"><a href=\"#双指针问题\" class=\"headerlink\" title=\"双指针问题\"></a>双指针问题</h3><p>最接近的三数之和-16</p>\n<p>给定一个包括  n 个整数的数组  nums  和 一个目标值  target。找出  nums  中的三个整数，使得它们的和与  target  最接近。返回这三个数的和。假定每组输入只存在唯一答案。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">示例：</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入：nums</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">= [</span><span style=\"color: #9569EC\">-1</span><span style=\"color: #CCCCCC\">,2,1,-4],</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">target</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出：2</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释：与</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">target</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">最接近的和是</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\"> (-1 </span><span style=\"color: #CCCCCC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\">)</span></span></code></pre></div><p>提示：</p>\n<p><code>3 &lt;= nums.length &lt;= 10^3``-10^3 &lt;= nums[i] &lt;= 10^3``-10^4 &lt;= target &lt;= 10^4</code></p>\n<p>来源：力扣（LeetCode）</p>\n<p>链接：<a href=\"https://leetcode-cn.com/problems/3sum-closest\">https://leetcode-cn.com/problems/3sum-closest</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>先按照升序排序，然后分别从左往右依次选择一个基础点 <code>i</code>（<code>0 &lt;= i &lt;= nums.length - 3</code>），在基础点的右侧用双指针去不断的找最小的差值。</p>\n<p>假设基础点是 <code>i</code>，初始化的时候，双指针分别是：</p>\n<ul>\n<li><p>**<code>left</code>**：<code>i + 1</code>，基础点右边一位。</p>\n</li>\n<li><p><strong><code>right</code></strong>: <code>nums.length - 1</code> 数组最后一位。</p>\n</li>\n</ul>\n<p>然后求此时的和，如果和大于 <code>target</code>，那么可以把右指针左移一位，去试试更小一点的值，反之则把左指针右移。</p>\n<p>在这个过程中，不断更新全局的最小差值 <code>min</code>，和此时记录下来的和 <code>res</code>。</p>\n<p>最后返回 <code>res</code> 即可。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">/**  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\"> nums  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number&#125;</span><span style=\"color: #65666B; font-style: italic\"> target  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">return</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number&#125;</span><span style=\"color: #65666B; font-style: italic\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> */</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">threeSumClosest</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">target</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> n </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">n </span><span style=\"color: #9569EC\">===</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">getSum</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">nums</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 先升序排序 此为解题的前置条件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">sort</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">a</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">b</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> a </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> b</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> min </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">Infinity</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 和 target 的最小差  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> res  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 从左往右依次尝试定一个基础指针 右边至少再保留两位 否则无法凑成3个  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> basic </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> nums</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> left </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 左指针先从 i 右侧的第一位开始尝试  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> right </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> n </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 右指针先从数组最后一项开始尝试  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">while</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">left </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> right</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> sum </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> basic </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> nums</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">left</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> nums</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">right</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 三数求和  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #65666B; font-style: italic\">// 更新最小差  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> diff </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Math</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">abs</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">sum </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> target</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">diff </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> min</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        min </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> diff  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        res </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> sum  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">sum </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> target</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 求出的和如果小于目标值的话 可以尝试把左指针右移 扩大值  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        left</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">sum </span><span style=\"color: #9569EC\">&gt;</span><span style=\"color: #CCCCCC\"> target</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 反之则右指针左移  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        right</span><span style=\"color: #9569EC\">--</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 相等的话 差就为0 一定是答案  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> sum  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> res  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">getSum</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">reduce</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">total</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">cur</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> total </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> cur</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"滑动窗口问题\"><a href=\"#滑动窗口问题\" class=\"headerlink\" title=\"滑动窗口问题\"></a>滑动窗口问题</h3><p>无重复字符的最长子串-3</p>\n<p>给定一个字符串，请你找出其中不含有重复字符的   最长子串   的长度。</p>\n<p>示例  1</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: </span><span style=\"color: #9569EC\">&quot;abcabcbb&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 3</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释: 因为无重复字符的最长子串是 </span><span style=\"color: #9569EC\">&quot;abc&quot;</span><span style=\"color: #9569EC\">，所以其长度为</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #CCCCCC\">。</span></span></code></pre></div><p>示例 2</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: </span><span style=\"color: #9569EC\">&quot;bbbbb&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 1</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释: 因为无重复字符的最长子串是 </span><span style=\"color: #9569EC\">&quot;b&quot;</span><span style=\"color: #9569EC\">，所以其长度为</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\">。</span></span></code></pre></div><p>示例 3</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: </span><span style=\"color: #9569EC\">&quot;pwwkew&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 3</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释: 因为无重复字符的最长子串是 </span><span style=\"color: #9569EC\">&quot;wke&quot;</span><span style=\"color: #9569EC\">，所以其长度为</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #CCCCCC\">。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">     请注意，你的答案必须是 子串 的长度，</span><span style=\"color: #9569EC\">&quot;pwke&quot;</span><span style=\"color: #9569EC\"> 是一个子序列，不是子串。</span></span></code></pre></div><p>来源：力扣（LeetCode） 链接：<a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters\">https://leetcode-cn.com/problems/longest-substring-without-repeating-characters</a> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>这题是比较典型的滑动窗口问题，定义一个左边界 <code>left</code> 和一个右边界 <code>right</code>，形成一个窗口，并且在这个窗口中保证不出现重复的字符串。</p>\n<p>这需要用到一个新的变量 <code>freqMap</code>，用来记录窗口中的字母出现的频率数。在此基础上，先尝试取窗口的右边界再右边一个位置的值，也就是 <code>str[right + 1]</code>，然后拿这个值去 <code>freqMap</code> 中查找：</p>\n<ol>\n<li><p>这个值没有出现过，那就直接把 <code>right ++</code>，扩大窗口右边界。</p>\n</li>\n<li><p>如果这个值出现过，那么把 <code>left ++</code>，缩进左边界，并且记得把 <code>str[left]</code> 位置的值在 <code>freqMap</code> 中减掉。</p>\n</li>\n</ol>\n<p>循环条件是 <code>left &lt; str.length</code>，允许左边界一直滑动到字符串的右界。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">/**  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;string&#125;</span><span style=\"color: #65666B; font-style: italic\"> s  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">return</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number&#125;</span><span style=\"color: #65666B; font-style: italic\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> */</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">lengthOfLongestSubstring</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">str</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> n </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">str</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 滑动窗口为s[left...right]  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> left </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> right </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">-1</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> freqMap </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 记录当前子串中下标对应的出现频率  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> max </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 找到的满足条件子串的最长长度  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">while</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">left </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> n</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> nextLetter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> str</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">right </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #CCCCCC\">freqMap</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">nextLetter</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">&amp;&amp;</span><span style=\"color: #CCCCCC\"> nextLetter </span><span style=\"color: #9569EC\">!==</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">undefined</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      freqMap</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">nextLetter</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      right</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      freqMap</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">str</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">left</span><span style=\"color: #505153\">]]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      left</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    max </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Math</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">max</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">max</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> right </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> left </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> max  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"链表问题\"><a href=\"#链表问题\" class=\"headerlink\" title=\"链表问题\"></a>链表问题</h3><p>两两交换链表中的节点-24</p>\n<p>给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。</p>\n<p>你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。</p>\n<p>示例:</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">给定 1-&gt;2-&gt;3-&gt;4, 你应该返回 2-&gt;1-&gt;4-&gt;3.</span></span></code></pre></div><p>来源：力扣（LeetCode）</p>\n<p>链接：<a href=\"https://leetcode-cn.com/problems/swap-nodes-in-pairs\">https://leetcode-cn.com/problems/swap-nodes-in-pairs</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>这题本意比较简单，<code>1 -&gt; 2 -&gt; 3 -&gt; 4</code> 的情况下可以定义一个递归的辅助函数 <code>helper</code>，这个辅助函数对于节点和它的下一个节点进行交换，比如 <code>helper(1)</code> 处理 <code>1 -&gt; 2</code>，并且把交换变成 <code>2 -&gt; 1</code> 的尾节点 <code>1</code>的<code>next</code>继续指向 <code>helper(3)</code>也就是交换后的 <code>4 -&gt; 3</code>。</p>\n<p>边界情况在于，如果顺利的作了两两交换，那么交换后我们的函数返回出去的是 <strong>交换后的头部节点</strong>，但是如果是奇数剩余项的情况下，没办法做交换，那就需要直接返回 <strong>原本的头部节点</strong>。这个在 <code>helper</code>函数和主函数中都有体现。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">swapPairs</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">head</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #CCCCCC\">head</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">null</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">helper</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">node</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> tempNext </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">next  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">tempNext</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> tempNextNext </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">next</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">next  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">next</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">next </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> node  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">tempNextNext</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">next </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">helper</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">tempNextNext</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">next </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">null</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> tempNext </span><span style=\"color: #DA67DA\">||</span><span style=\"color: #CCCCCC\"> node  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> res </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">helper</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">head</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> res </span><span style=\"color: #DA67DA\">||</span><span style=\"color: #CCCCCC\"> head  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"深度优先遍历问题\"><a href=\"#深度优先遍历问题\" class=\"headerlink\" title=\"深度优先遍历问题\"></a>深度优先遍历问题</h3><p>二叉树的所有路径-257</p>\n<p>给定一个二叉树，返回所有从根节点到叶子节点的路径。</p>\n<p>说明:  叶子节点是指没有子节点的节点。</p>\n<p>示例</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">   1</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\"> /   \\</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">2     3</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\"> \\</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">  5</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: [</span><span style=\"color: #9569EC\">&quot;1-&gt;2-&gt;5&quot;</span><span style=\"color: #9569EC\">, </span><span style=\"color: #9569EC\">&quot;1-&gt;3&quot;</span><span style=\"color: #9569EC\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释: 所有根节点到叶子节点的路径为: 1-&gt;2-&gt;5, 1-&gt;3</span></span></code></pre></div><p>来源：力扣（LeetCode）</p>\n<p>链接：<a href=\"https://leetcode-cn.com/problems/binary-tree-paths\">https://leetcode-cn.com/problems/binary-tree-paths</a></p>\n<p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>用当前节点的值去拼接左右子树递归调用当前函数获得的所有路径。</p>\n<p>也就是根节点拼上以左子树为根节点得到的路径，加上根节点拼上以右子树为根节点得到的所有路径。</p>\n<p>直到叶子节点，仅仅返回包含当前节点的值的数组。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">binaryTreePaths</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> res </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #CCCCCC\">root</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> res  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">left </span><span style=\"color: #DA67DA\">&amp;&amp;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">!</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">right</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span><span style=\"color: #9569EC\">`</span><span style=\"color: #DA67DA\">$&#123;</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">val</span><span style=\"color: #DA67DA\">&#125;</span><span style=\"color: #9569EC\">`</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> leftPaths </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">binaryTreePaths</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">left</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> rightPaths </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">binaryTreePaths</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">right</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">leftPaths</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">forEach</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">leftPath</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">res</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">`</span><span style=\"color: #DA67DA\">$&#123;</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">val</span><span style=\"color: #DA67DA\">&#125;</span><span style=\"color: #CCCCCC\">-&gt;</span><span style=\"color: #DA67DA\">$&#123;</span><span style=\"color: #CCCCCC\">leftPath</span><span style=\"color: #DA67DA\">&#125;</span><span style=\"color: #9569EC\">`</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">rightPaths</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">forEach</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">rightPath</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">res</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">`</span><span style=\"color: #DA67DA\">$&#123;</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">val</span><span style=\"color: #DA67DA\">&#125;</span><span style=\"color: #CCCCCC\">-&gt;</span><span style=\"color: #DA67DA\">$&#123;</span><span style=\"color: #CCCCCC\">rightPath</span><span style=\"color: #DA67DA\">&#125;</span><span style=\"color: #9569EC\">`</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> res  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"广度优先遍历（BFS）问题\"><a href=\"#广度优先遍历（BFS）问题\" class=\"headerlink\" title=\"广度优先遍历（BFS）问题\"></a>广度优先遍历（BFS）问题</h3><p>在每个树行中找最大值-515</p>\n<p><a href=\"https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row\">https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row</a></p>\n<p>您需要在二叉树的每一行中找到最大的值。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">          1</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">         / \\</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">        3   2</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">       / \\   \\</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">      5   3   9</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: [1, 3, 9]</span></span></code></pre></div><hr>\n<p>这是一道典型的 BFS 题目，BFS 的套路其实就是维护一个 queue 队列，在读取子节点的时候同时把发现的孙子节点 push 到队列中，但是<strong>先不处理</strong>，等到这一轮队列中的子节点处理完成以后，下一轮再继续处理的就是<strong>孙子节点</strong>了，这就实现了层序遍历，也就是一层层的去处理。</p>\n<p>但是这里有一个问题卡住我了一会，就是如何知道当前处理的节点是<strong>哪个层级</strong>的，在最开始的时候我尝试写了一下二叉树求某个 index 所在层级的公式，但是发现这种公式只能处理「平衡二叉树」。</p>\n<p>后面看题解发现他们都没有专门维护层级，再仔细一看才明白层级的思路：</p>\n<p>其实就是在每一轮 while 循环里，再开一个 for 循环，这个 for 循环的终点是「提前缓存好的 length 快照」，也就是进入这轮 while 循环时，queue 的长度。其实这个长度就恰好代表了「一个层级的长度」。</p>\n<p>缓存后，for 循环里可以安全的把子节点 push 到数组里而不影响缓存的当前层级长度。</p>\n<p>另外有一个小 tips，在 for 循环处理完成后，应该要把 queue 的长度截取掉上述的缓存长度。一开始我使用的是 <code>queue.splice(0, len)</code>，结果速度只击败了 33%的人。后面换成 for 循环中去一个一个<code>shift</code>来截取，速度就击败了 77%的人。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">/**  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;TreeNode&#125;</span><span style=\"color: #65666B; font-style: italic\"> root  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">return</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> */</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">largestValues</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">root</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #CCCCCC\">root</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> queue </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">root</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> maximums </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">while</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">queue</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> max </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Number</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">MIN_SAFE_INTEGER  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 这里需要先缓存length 这个length代表当前层级的所有节点  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 在循环开始后 会push新的节点 length就不稳定了  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> len </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">queue</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> len</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> node </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> queue</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      max </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Math</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">max</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">val</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> max</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">left</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">queue</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">left</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">right</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">queue</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">node</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">right</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 本「层级」处理完毕，截取掉。  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> len</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #61D0FF\">queue</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">shift</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 这个for循环结束后 代表当前层级的节点全部处理完毕  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 直接把计算出来的最大值push到数组里即可。  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">maximums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">max</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> maximums  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"栈问题\"><a href=\"#栈问题\" class=\"headerlink\" title=\"栈问题\"></a>栈问题</h3><p>有效的括号-20</p>\n<p>给定一个只包括 <code>&#39;(&#39;，&#39;)&#39;，&#39;&#123;&#39;，&#39;&#125;&#39;，&#39;[&#39;，&#39;]&#39;</code> 的字符串，判断字符串是否有效。</p>\n<p>有效字符串需满足：</p>\n<ul>\n<li><p>左括号必须用相同类型的右括号闭合。</p>\n</li>\n<li><p>左括号必须以正确的顺序闭合。</p>\n</li>\n<li><p>注意空字符串可被认为是有效字符串。</p>\n</li>\n</ul>\n<p>示例 1</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: &quot;</span><span style=\"color: #CCCCCC\">()</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">输出: true</span></span></code></pre></div><p>示例 2</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: &quot;</span><span style=\"color: #CCCCCC\">()[]&#123;&#125;&quot;  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: true</span></span></code></pre></div><p>示例 3</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: </span><span style=\"color: #9569EC\">&quot;(]&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: false</span></span></code></pre></div><p>示例 4</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: </span><span style=\"color: #9569EC\">&quot;([)]&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: false</span></span></code></pre></div><p>示例 5</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">输入: </span><span style=\"color: #9569EC\">&quot;&#123;[]&#125;&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: true</span></span></code></pre></div><p><a href=\"https://leetcode-cn.com/problems/valid-parentheses\">https://leetcode-cn.com/problems/valid-parentheses</a></p>\n<hr>\n<p>提前记录好左括号类型 <code>(, &#123;, [</code>和右括号类型<code>), &#125;, ]</code>的映射表，当遍历中遇到左括号的时候，就放入栈 <code>stack</code> 中（其实就是数组），当遇到右括号时，就把 <code>stack</code> 顶的元素 <code>pop</code> 出来，看一下是否是这个右括号所匹配的左括号（比如 <code>(</code> 和 <code>)</code> 是一对匹配的括号）。</p>\n<p>当遍历结束后，栈中不应该剩下任何元素，返回成功，否则就是失败。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">/**  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;string&#125;</span><span style=\"color: #65666B; font-style: italic\"> s  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">return</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;boolean&#125;</span><span style=\"color: #65666B; font-style: italic\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> */</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">isValid</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">s</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> sl </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">s</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">sl </span><span style=\"color: #9569EC\">%</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">!==</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">false</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> leftToRight </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">&#123;</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">&#125;</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">[</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">]</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">)</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 建立一个反向的 value -&gt; key 映射表  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> rightToLeft </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">createReversedMap</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">leftToRight</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 用来匹配左右括号的栈  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> stack </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">s</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> bracket </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> s</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 左括号 放进栈中  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">leftToRight</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">bracket</span><span style=\"color: #505153\">])</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #61D0FF\">stack</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">bracket</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> needLeftBracket </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> rightToLeft</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">bracket</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #65666B; font-style: italic\">// 左右括号都不是 直接失败  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #CCCCCC\">needLeftBracket</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">false</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #65666B; font-style: italic\">// 栈中取出最后一个括号 如果不是需要的那个左括号 就失败  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> lastBracket </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">stack</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">pop</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">needLeftBracket </span><span style=\"color: #9569EC\">!==</span><span style=\"color: #CCCCCC\"> lastBracket</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">false</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">stack</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">false</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">true</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">createReversedMap</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">map</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Object</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">keys</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">map</span><span style=\"color: #505153\">)</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">reduce</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">prev</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">key</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> map</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">key</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    prev</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> key  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> prev  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"递归与回溯\"><a href=\"#递归与回溯\" class=\"headerlink\" title=\"递归与回溯\"></a>递归与回溯</h3><p>直接看我写的这两篇文章即可，递归与回溯甚至是平常业务开发中最常见的算法场景之一了，所以我重点总结了两篇文章。</p>\n<p>《前端电商 sku 的全排列算法很难吗？学会这个套路，彻底掌握排列组合。》[1]</p>\n<p>前端「N 皇后」递归回溯经典问题图解[2]</p>\n<h3 id=\"动态规划\"><a href=\"#动态规划\" class=\"headerlink\" title=\"动态规划\"></a>动态规划</h3><p>打家劫舍 - 198</p>\n<p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</p>\n<p>给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最高金额。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">示例 1:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入: [1,2,3,1]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 4</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释: 偷窃</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">号房屋 </span><span style=\"color: #CCCCCC\">(</span><span style=\"color: #9569EC\">金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\">)</span><span style=\"color: #CCCCCC\"> ，然后偷窃</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">号房屋 </span><span style=\"color: #CCCCCC\">(</span><span style=\"color: #9569EC\">金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">3</span><span style=\"color: #CCCCCC\">)</span><span style=\"color: #CCCCCC\">。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">  偷窃到的最高金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">4</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">示例 2:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入: [2,7,9,3,1]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 12</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释: 偷窃</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">号房屋 </span><span style=\"color: #CCCCCC\">(</span><span style=\"color: #9569EC\">金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\">)</span><span style=\"color: #CCCCCC\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">偷窃</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">号房屋 </span><span style=\"color: #CCCCCC\">(</span><span style=\"color: #9569EC\">金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">9</span><span style=\"color: #CCCCCC\">)</span><span style=\"color: #CCCCCC\">，接着偷窃</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">5</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">号房屋 </span><span style=\"color: #CCCCCC\">(</span><span style=\"color: #9569EC\">金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\">)</span><span style=\"color: #CCCCCC\">。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">  偷窃到的最高金额 </span><span style=\"color: #CCCCCC\">= </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">9</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">12</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">。</span></span></code></pre></div><p>来源：力扣（LeetCode） 链接：<a href=\"https://leetcode-cn.com/problems/house-robber\">https://leetcode-cn.com/problems/house-robber</a> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>动态规划的一个很重要的过程就是找到「状态」和「状态转移方程」，在这个问题里，设 <code>i</code> 是当前屋子的下标，状态就是 <strong>以 i 为起点偷窃的最大价值</strong></p>\n<p>在某一个房子面前，盗贼只有两种选择：<strong>偷或者不偷</strong>。</p>\n<ol>\n<li><p>偷的话，价值就是「当前房子的价值」+「下两个房子开始盗窃的最大价值」</p>\n</li>\n<li><p>不偷的话，价值就是「下一个房子开始盗窃的最大价值」</p>\n</li>\n</ol>\n<p>在这两个值中，选择<strong>最大值</strong>记录在 <code>dp[i]</code>中，就得到了<strong>以 <code>i</code> 为起点所能偷窃的最大价值。</strong>。</p>\n<p>动态规划的起手式，找<strong>基础状态</strong>，在这题中，以<strong>终点</strong>为起点的最大价值一定是最好找的，因为终点不可能再继续往后偷窃了，所以设 <code>n</code> 为房子的总数量， <code>dp[n - 1]</code> 就是 <code>nums[n - 1]</code>，小偷只能选择偷窃这个房子，而不能跳过去选择下一个不存在的房子。</p>\n<p>那么就找到了动态规划的状态转移方程：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">// 抢劫当前房子</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">robNow </span><span style=\"color: #CCCCCC\">= nums[i] + dp[i + 2] // 「当前房子的价值」 + 「i + 2 下标房子为起点的最大价值」  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">// 不抢当前房子，抢下一个房子</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">robNext </span><span style=\"color: #CCCCCC\">= dp[i + 1] //「i + 1 下标房子为起点的最大价值」  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">// 两者选择最大值</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">dp[i] </span><span style=\"color: #CCCCCC\">= Math.max(robNow, robNext)</span></span></code></pre></div><p>并且<strong>从后往前</strong>求解。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">!</span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> dp </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[];</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">for</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">nums</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&gt;=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> i</span><span style=\"color: #9569EC\">--</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> robNow </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> nums</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">dp</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">||</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> robNext </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> dp</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">||</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    dp</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">Math</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">max</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">robNow</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> robNext</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> dp</span><span style=\"color: #505153\">[</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">];</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;;</span></span></code></pre></div><p>最后返回 <strong>以 0 为起点开始打劫的最大价值</strong> 即可。</p>\n<h3 id=\"贪心算法问题\"><a href=\"#贪心算法问题\" class=\"headerlink\" title=\"贪心算法问题\"></a>贪心算法问题</h3><p>分发饼干-455</p>\n<p>假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。对每个孩子 i ，都有一个胃口值  gi ，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j ，都有一个尺寸 sj 。如果 sj &gt;&#x3D; gi ，我们可以将这个饼干 j 分配给孩子 i ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。</p>\n<p>注意：</p>\n<p>你可以假设胃口值为正。一个小朋友最多只能拥有一块饼干。</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">示例 1:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入: [1,2,3], [1,1]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 1</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">所以你应该输出1。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">示例 2:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输入: [1,2], [1,2,3]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">输出: 2</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">解释:</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">你有两个孩子和三块小饼干，2个孩子的胃口值分别是1,2。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">你拥有的饼干数量和尺寸都足以让所有孩子满足。</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">所以你应该输出2.</span></span></code></pre></div><p>来源：力扣（LeetCode） 链接：<a href=\"https://leetcode-cn.com/problems/assign-cookies\">https://leetcode-cn.com/problems/assign-cookies</a> 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>\n<hr>\n<p>把饼干和孩子的需求都排序好，然后从最小的饼干分配给需求最小的孩子开始，不断的尝试新的饼干和新的孩子，这样能保证每个分给孩子的饼干都恰到好处的不浪费，又满足需求。</p>\n<p>利用双指针不断的更新 <code>i</code> 孩子的需求下标和 <code>j</code>饼干的值，直到两者有其一达到了终点位置：</p>\n<ol>\n<li><p>如果当前的饼干不满足孩子的胃口，那么把 <code>j++</code> 寻找下一个饼干，不用担心这个饼干被浪费，因为这个饼干更不可能满足下一个孩子（胃口更大）。</p>\n</li>\n<li><p>如果满足，那么 <code>i++; j++; count++</code> 记录当前的成功数量，继续寻找下一个孩子和下一个饼干。</p>\n</li>\n</ol>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">/**  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\"> g  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">param</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number[]&#125;</span><span style=\"color: #65666B; font-style: italic\"> s  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> * </span><span style=\"color: #505153; font-style: italic\">@</span><span style=\"color: #DA67DA; font-style: italic\">return</span><span style=\"color: #65666B; font-style: italic\"> </span><span style=\"color: #9569EC; font-style: italic\">&#123;number&#125;</span><span style=\"color: #65666B; font-style: italic\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\"> */</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">findContentChildren</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">g</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">s</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">g</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">sort</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">a</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">b</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> a </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> b</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">s</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">sort</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">a</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">b</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> a </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> b</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> j </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> count </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">while</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">j </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">s</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length </span><span style=\"color: #DA67DA\">&amp;&amp;</span><span style=\"color: #CCCCCC\"> i </span><span style=\"color: #9569EC\">&lt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">g</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">length</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> need </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> g</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">i</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> cookie </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> s</span><span style=\"color: #505153\">[</span><span style=\"color: #CCCCCC\">j</span><span style=\"color: #505153\">]</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">cookie </span><span style=\"color: #9569EC\">&gt;=</span><span style=\"color: #CCCCCC\"> need</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      count</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      i</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      j</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">else</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      j</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> count  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h2 id=\"必做题目\"><a href=\"#必做题目\" class=\"headerlink\" title=\"必做题目\"></a>必做题目</h2><p>其实写了这么多，以上分类所提到的题目，只是当前分类下比较适合作为例题来讲解的题目而已，在整个 <code>LeetCode</code> 学习过程中只是冰山一角。这些题可以作为你深入这个分类的一个入门例题，但是不可避免的是，你必须去下苦功夫刷<strong>每个分类下的其他经典题目</strong>。</p>\n<p>如果你信任我，你也可以在我维护的题解仓库的 Issues 中[3]获取各个分类下<strong>必做题目</strong>的详细题解（拿到了记得收藏），我跟着一个<strong>ACM 亚洲区奖牌获得者</strong>给出的提纲，整理了<strong>100+道</strong>必做题目的<strong>详细题解</strong>。</p>\n<p>那么什么叫必做题目呢？</p>\n<ol>\n<li><p>它核心考察<strong>算法思想</strong>，而不是奇巧淫技。</p>\n</li>\n<li><p>它考察的知识点，可以<strong>举一反三</strong>的应用到很多相似题目上。</p>\n</li>\n<li><p><strong>面试热门</strong>题，大厂喜欢考这个题目，说明这个知识点很重要。</p>\n</li>\n</ol>\n<p>当然你也可以去知乎等平台搜索相关的问题，也会有很多人总结，但是比我总结的全的不多见。100 多题说多也不多，说少也不少。认真学习、解答、吸收这些题目大概要花费<strong>1 个月</strong>左右的时间。但是相信我，1 个月以后你在算法方面会脱胎换骨，应对国内大厂的算法面试也会变得游刃有余。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>关于算法在工程方面有用与否的争论，已经是一个经久不衰的话题了。这里不讨论这个，我个人的观念是<strong>绝对有用</strong>的，只要你不是一个甘于只做简单需求的人，你一定会在后续开发架构、遇到难题的过程中或多或少的从你的算法学习中受益。</p>\n<p>再说的功利点，就算是为了面试，刷算法能够进入大厂也是你职业生涯的一个起飞点，大厂给你带来的的环境、严格的 <code>Code Review</code>、完善的导师机制和协作流程也是你作为<strong>工程师</strong>所梦寐以求的。</p>\n<p>希望这篇文章能让你不再继续害怕算法面试，跟着我一起攻下这座城堡吧，大家加油！</p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p>[1]</p>\n<p>《前端电商 sku 的全排列算法很难吗？学会这个套路，彻底掌握排列组合。》: <em><a href=\"https://juejin.im/post/5ee6d9026fb9a047e60815f1\">https://juejin.im/post/5ee6d9026fb9a047e60815f1</a></em></p>\n<p>[2]</p>\n<p>前端「N 皇后」递归回溯经典问题图解: <em><a href=\"https://juejin.im/post/5eeafa406fb9a058b51e60c0\">https://juejin.im/post/5eeafa406fb9a058b51e60c0</a></em></p>\n<p>[3]</p>\n<p>我维护的题解仓库的 Issues 中: <em><a href=\"https://github.com/sl1673495/leetcode-javascript/issues\">https://github.com/sl1673495/leetcode-javascript/issues</a></em></p>\n<hr>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>学如逆水行舟，不进则退</p>\n<p><code>2024</code> <code>2</code> <code>11</code></p>\n","feature":true,"text":"前言最近国内大厂面试中，出现 LeetCode 真题考察的频率越来越高了。我也观察到有越来越多的前端同学开始关注算法这个话题。 但是算法是一个门槛很高的东西，在...","permalink":"/post/写给前端的算法进阶指南，我是如何两个月零基础刷200题","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"好文摘录","slug":"好文摘录","count":3,"path":"api/categories/好文摘录.json"}],"tags":[{"name":"个人成长","slug":"个人成长","count":3,"path":"api/tags/个人成长.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BF%83%E8%B7%AF\"><span class=\"toc-text\">心路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">学习方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E7%B1%BB%E5%A4%A7%E7%BA%B2\"><span class=\"toc-text\">分类大纲</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3\"><span class=\"toc-text\">题解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E6%89%BE%E8%A1%A8%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">查找表问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">双指针问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">滑动窗口问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%A1%A8%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">链表问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">深度优先遍历问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%EF%BC%88BFS%EF%BC%89%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">广度优先遍历（BFS）问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%88%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">栈问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%E4%B8%8E%E5%9B%9E%E6%BA%AF\"><span class=\"toc-text\">递归与回溯</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92\"><span class=\"toc-text\">动态规划</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">贪心算法问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BF%85%E5%81%9A%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">必做题目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol>","author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前端做了快两年了，盘点一下我的前端技术栈","uid":"593191d2ee5e83bc4ca2a8a8cae1a811","slug":"前端做了快两年了，盘点一下我的前端技术栈","date":"2024-02-12T03:24:42.000Z","updated":"2024-02-12T03:30:08.761Z","comments":true,"path":"api/articles/前端做了快两年了，盘点一下我的前端技术栈.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c9907a9f345e8d03387d40.jpg","text":"前言前言很简单，年终了，自己写了快两年前端（虽然刚毕业），但是大致总结一下哈哈哈哈 我觉得这个话题蛮有意思的，可以看看大家的技术广度，可以进行分享和学习以及讨论...","permalink":"/post/前端做了快两年了，盘点一下我的前端技术栈","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"好文摘录","slug":"好文摘录","count":3,"path":"api/categories/好文摘录.json"}],"tags":[{"name":"个人成长","slug":"个人成长","count":3,"path":"api/tags/个人成长.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"feature":true},"next_post":{"title":"天生不聪明","uid":"e77a14690b250ca8b028ed7676a06b30","slug":"天生不聪明","date":"2024-02-11T05:17:40.000Z","updated":"2024-02-11T05:46:22.633Z","comments":true,"path":"api/articles/天生不聪明.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c853059f345e8d03017357.jpg","text":"本文是我和慕课网合作的第一篇文字内容。文末有慕课网支持的重磅福利。天生聪明的你，一定不要错过。 因为我在慕课网上讲了几门算法课程，所以经常收到一些同学的提问。除...","permalink":"/post/天生不聪明","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"好文摘录","slug":"好文摘录","count":3,"path":"api/categories/好文摘录.json"}],"tags":[{"name":"个人成长","slug":"个人成长","count":3,"path":"api/tags/个人成长.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"feature":true}}