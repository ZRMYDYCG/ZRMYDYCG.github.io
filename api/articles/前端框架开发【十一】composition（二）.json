{"title":"API（二）","uid":"371477a1433f4cd6b2ca4cceb332d881","slug":"前端框架开发【十一】composition（二）","date":"2023-09-22T03:46:36.000Z","updated":"2024-02-15T03:49:57.271Z","comments":true,"path":"api/articles/前端框架开发【十一】composition（二）.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","content":"<h2 id=\"一、computed\"><a href=\"#一、computed\" class=\"headerlink\" title=\"一、computed\"></a>一、computed</h2><p>在前面我们讲解过计算属性computed：当我们的某些属性是依赖其他状态时，我们可以使用计算属性来处理</p>\n<ul>\n<li><p>在前面的Options API中，我们是使用<code>computed选项</code>来完成。</p>\n</li>\n<li><p>在Composition API中，我们可以在 setup 函数中使用<code>computed函数</code>来编写一个计算属性。</p>\n</li>\n</ul>\n<p>如何使用computed函数呢？</p>\n<ul>\n<li><p>方式一：接收一个getter函数，并根据 getter 的返回值返回一个不可变的响应式 ref 对象。</p>\n</li>\n<li><p>方式二：接收一个具有 get 和 set 方法的对象，返回一个可变的（可读写）ref 对象。</p>\n</li>\n</ul>\n<h3 id=\"1-1-computed基本使用\"><a href=\"#1-1-computed基本使用\" class=\"headerlink\" title=\"1.1. computed基本使用\"></a>1.1. computed基本使用</h3><p>下面我们来看看computed函数的基本使用：接收一个getter函数。</p>\n<p>首先使用Vue CLI新建一个<code>01_composition_api</code>的Vue3项目，然后在<code>01_composition_api</code>项目的<code>src</code>目录下新建<code>07_computed使用</code>文件夹，然后在该文件夹下分别新建：<code>App.vue，ComputedAPI.vue</code>组件。</p>\n<p>ComputedAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">&lt;!-- 2.使用fullName计算属性 --&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;fullName&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">changeName</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">修改firstName</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> computed </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> firstName </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> lastName </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Bryant</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.用法一: 传入一个getter函数。computed的返回值是一个ref对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> fullName </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">computed</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">firstName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">lastName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #65666B; font-style: italic\">// 3.修改firstName  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">firstName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">James</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            fullName</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            changeName  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们使用了computed函数来定义了一个fullName计算属性，其中computed函数需要接收一个getter函数，我们在getter函数中对响应式的数据进行计算和返回。</p>\n<p>App.vue根组件，代码如下所示（省略了组件注册的代码）：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        App组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">ComputedAPI</span><span style=\"color: #DA67DA\">&gt;&lt;/</span><span style=\"color: #9569EC; font-style: italic\">ComputedAPI</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">.....</span></span></code></pre></div><p>然后我们修改main.js程序入口文件，将导入的App组件改为<code>07_computed使用/App.vue</code>路径下的App组件。</p>\n<p>保存代码，运行在浏览器的效果，如图10-16所示。计算属性可以正常显示，当点击修改firstName按钮时也可以响应式刷新页面。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd785e9f345e8d031c6927.jpg\" alt=\" computed函数的基本使用\"></p>\n<h3 id=\"1-2-计算属性的-get-和-set-方法\"><a href=\"#1-2-计算属性的-get-和-set-方法\" class=\"headerlink\" title=\"1.2. 计算属性的 get 和 set 方法\"></a>1.2. 计算属性的 get 和 set 方法</h3><p>接着我们再来看看computed函数的get和set方法的使用：接收一个对象，里面包含 <code>set</code> 和 <code>get</code>方法。</p>\n<p>修改ComputedAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> computed </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> firstName </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> lastName </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Bryant</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// const fullName = computed(() =&gt; firstName.value + &quot; &quot; + lastName.value);  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.用法二: 传入一个对象, 对象包含getter/setter  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> fullName </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">computed</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">get</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">firstName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">lastName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// getter 方法  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">set</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// setter 方法  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> names </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">split</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">firstName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> names</span><span style=\"color: #505153\">[</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">];</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">lastName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> names</span><span style=\"color: #505153\">[</span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">];</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #65666B; font-style: italic\">// firstName.value = &quot;James&quot;  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #65666B; font-style: italic\">// 3.修改fullName计算属性  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">fullName</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">James Bryant</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            fullName</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            changeName  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们使用了computed函数来定义了一个fullName计算属性，其中computed函数接收一个具有 get 和 set 方法的对象，我们在get方法中对响应式的数据进行计算和返回，在set方法中对传入的新值重新赋值给firstName和lastName响应式对象的值。</p>\n<p>保存代码，运行在浏览器后。fullName计算属性可以正常显示，当点击修改firstName按钮时也可以响应式刷新页面。</p>\n<h2 id=\"二、watchEffect侦听\"><a href=\"#二、watchEffect侦听\" class=\"headerlink\" title=\"二、watchEffect侦听\"></a>二、watchEffect侦听</h2><p>在前面的Options API中，我们可以通过<code>watch选项</code>来侦听data，props或者computed的数据变化，当数据变化时执行某一些操作。</p>\n<p>在Composition API中，我们可以使用<code>watchEffect</code>和<code>watch</code>来完成响应式数据的侦听。</p>\n<ul>\n<li><p>watchEffect用于自动收集响应式数据的依赖。</p>\n</li>\n<li><p>watch需要手动指定侦听的数据源。</p>\n</li>\n</ul>\n<p>下面我们先来看看watchEffect函数的基本使用。</p>\n<h3 id=\"2-1-watchEffect基本使用\"><a href=\"#2-1-watchEffect基本使用\" class=\"headerlink\" title=\"2.1. watchEffect基本使用\"></a>2.1. watchEffect基本使用</h3><p>当侦听到某些响应式数据变化时，我们希望执行某些操作，这个时候可以使用 <code>watchEffect</code>：</p>\n<ul>\n<li><p>首先，watchEffect传入的函数会被立即执行一次，并且在执行的过程中会收集依赖。</p>\n</li>\n<li><p>其次，只有收集的依赖发生变化时，watchEffect传入的函数才会再次执行。</p>\n</li>\n</ul>\n<p>下面通过一个案例来学习watchEffect基本使用。我们在<code>01_composition_api</code>项目的<code>src</code>目录下新建<code>08_watch使用</code>文件夹，然后在该文件夹下分别新建：<code>App.vue，WatchEffectAPI.vue</code>组件。</p>\n<p>WatchEffectAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;age&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">changeAge</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">修改age</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watchEffect </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// watchEffect: 1.自动收集响应式的依赖 2.默认会先执行一次 3.获取不到新值和旧值  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watchEffect</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">age:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 侦听age的改变, age发生变化后会再次执行  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeAge</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            changeAge  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们在setup函数中调用了watchEffect函数，并给该函数传递了一个回调函数，传入的回调函数会被立即执行一次，并且在执行的过程中会收集依赖（收集age的依赖）。当收集的依赖发生变化时，watchEffect传入的回调函数又会再次执行。</p>\n<p>App.vue根组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        App组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">WatchEffectAPI</span><span style=\"color: #DA67DA\">&gt;&lt;/</span><span style=\"color: #9569EC; font-style: italic\">WatchEffectAPI</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">.....</span></span></code></pre></div><p>然后我们修改main.js程序入口文件，将导入的App组件改为<code>08_watch使用/App.vue</code>路径下的App组件。</p>\n<p>保存代码，运行在浏览器的效果，如图10-17所示。可以看到，默认会先执行一次打印age:18，当点击修改age按钮来改变age时，watchEffect侦听到age发生改变后，回调函数又会再次执行，并打印age:19。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd7bb39f345e8d03246d74.jpg\" alt=\"watchEffect基本使用\"></p>\n<h3 id=\"2-2-watchEffect停止侦听\"><a href=\"#2-2-watchEffect停止侦听\" class=\"headerlink\" title=\"2.2. watchEffect停止侦听\"></a>2.2. watchEffect停止侦听</h3><p>如果在发生某些情况下，我们希望停止侦听，这个时候我们可以获取watchEffect的返回值函数，调用该函数即可。</p>\n<p>比如在上面的案例中，我们age达到20的时候就停止侦听，WatchEffectAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">....  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watchEffect </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.stop是watchEffect返回值的函数，用来停止侦听  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> stop </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">watchEffect</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">age:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 侦听age的改变  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeAge</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #9569EC\">if</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">20</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">                </span><span style=\"color: #9569EC\">stop</span><span style=\"color: #505153\">();</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 2.停止侦听age的变化  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> changeAge</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>保存代码，运行在浏览器后，可以看到默认会先执行一次打印age:18，当点击修改age按钮来改变age时，当age大于20的时候，由于调用了watchEffect返回的stop函数，watchEffect将会取消对age变量的侦听。</p>\n<h3 id=\"2-3-watchEffect清除副作用\"><a href=\"#2-3-watchEffect清除副作用\" class=\"headerlink\" title=\"2.3. watchEffect清除副作用\"></a>2.3. watchEffect清除副作用</h3><p>什么是清除副作用呢？</p>\n<ul>\n<li><p>比如在开发中我们需要在侦听函数中执行网络请求，但是在网络请求还没有达到的时候，我们停止了侦听器，或者侦听器侦听函数被再次执行了。</p>\n</li>\n<li><p>那么上一次的网络请求应该被取消掉（类似前面讲的防抖），这个时候我们就可以清除上一次的副作用。</p>\n</li>\n</ul>\n<p>在我们给watchEffect传入的函数被回调时，其实可以获取到一个参数：onInvalidate</p>\n<ul>\n<li><p>当<strong>副作用即将再次重新执行</strong> 或者 <strong>侦听器被停止</strong> 时会执行onInvalidate函数传入的回调函数。</p>\n</li>\n<li><p>我们可以在传入的回调函数中，执行一些清除的工作。</p>\n</li>\n</ul>\n<p>我们在<code>08_watch使用</code>文件夹下新建：<code>WatchEffectAPIClear.vue</code>组件。</p>\n<p>WatchEffectAPIClear.vue子组件，代码如下所示（省略的template和上面案例一样）：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">......  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watchEffect </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">watchEffect</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">onInvalidate</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> timer </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">setTimeout</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">模拟网络请求，网络请求成功~</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2000</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">onInvalidate</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #65666B; font-style: italic\">// 当侦听到age发生变化和侦听停止时会执行该这里代码，并在该函数中清除额外的副作用  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #9569EC\">clearTimeout</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">timer</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// age发生改变时，优先清除上一次定时器的副作用  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">                </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">onInvalidate</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">age:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 侦听age的改变  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeAge</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">age</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">changeAge</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，watchEffect函数传入的回调函数接收一个onInvalidate参数，onInvalidate也是一个函数，并且该函数也需要接收一个回调函数作为参数。</p>\n<p>App.vue根组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        App组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">&lt;!-- &lt;WatchEffectAPI&gt;&lt;/WatchEffectAPI&gt; --&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">WatchEffectAPIClear</span><span style=\"color: #DA67DA\">&gt;&lt;/</span><span style=\"color: #9569EC; font-style: italic\">WatchEffectAPIClear</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>保存代码，运行在浏览器的效果，如图10-18所示。刷新页面，立马连续点击3次修改age，我们可以看到watchEffect函数侦听到age改变了3次，并在每次将重新执行watchEffect函数的回调函数时先执行了onInvalidate函数中的回调函数来清除副作用（即把上一次的定时器给清除了，所以只有最后一次的定时器没有被清除）。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd7d5f9f345e8d032879c5.jpg\" alt=\"watchEffect清除副作用\"></p>\n<h3 id=\"2-4-watchEffect执行时机\"><a href=\"#2-4-watchEffect执行时机\" class=\"headerlink\" title=\"2.4. watchEffect执行时机\"></a>2.4. watchEffect执行时机</h3><p>在讲解 watchEffect执行时机之前，我们先补充一个知识：在setup中如何使用ref或者元素或者组件？</p>\n<ul>\n<li>其实非常简单，我们只需要定义一个前面讲的ref对象，绑定到元素或者组件的ref属性上即可。</li>\n</ul>\n<p>我们在<code>08_watch使用</code>文件夹下新建：<code>WatchEffectAPIFlush.vue</code>组件。</p>\n<p>WatchEffectAPIFlush.vue子组件，代码如下所示（省略的template和上面案例一样）：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">ref</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">titleRef</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">哈哈哈</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watchEffect </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.定义一个titleRef来拿到h4元素的DOM对象（组件对象也是一样）  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC; font-style: italic\">null</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 2.h4元素挂载完成之后会自动赋值到titleRef变量上，这里监听titleRef变量被赋值，并打印出来看  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watchEffect</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">titleRef</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 3.打印h4元素的DOM对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们先用ref函数定义了一个titleRef响应式变量，接着该变量在setup函数中返回，并绑定到h4元素的ref属性上（注意：不需要用v-bind指令来绑定）。当h4元素挂载完成之后会自动赋值到titleRef变量上。为了观察titleRef变量被赋值，这里我们使用watchEffect函数来侦听titleRef变量的改变，并打印出来。最后我们在App.vue根组件中导入和使用WatchEffectAPIFlush组件（和前面的操作基本一样，这里不再贴代码）。</p>\n<p>保存代码，运行在浏览器的效果，如图10-19所示。刷新页面，我们会发现打印结果打印了两次。</p>\n<ul>\n<li><p>这是因为setup函数在执行时就会立即执行传入的副作用函数（watchEffect的回调函数），这个时候DOM并没有挂载，所以打印为null。</p>\n</li>\n<li><p>而当DOM挂载时，会给titleRef变量的ref对象赋值新的值，副作用函数会再次执行，打印出对应的元素。</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65cd7dc89f345e8d03297392.jpg\" alt=\"ref获取元素对象\"></p>\n<p>如果我们希望在第一次的时候就打印出来对应的元素呢？</p>\n<ul>\n<li><p>这个时候我们需要改变副作用函数的执行时机。</p>\n</li>\n<li><p>它的默认值是pre，它会在元素 <code>挂载</code> 或者 <code>更新</code> 之前执行。</p>\n</li>\n<li><p>所以我们会先打印出来一个空的，当依赖的titleRef发生改变时，就会再次执行一次，打印出元素。</p>\n</li>\n</ul>\n<p>我们可以设置副作用函数的执行时机，修改WatchEffectAPIFlush.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">......  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">......</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watchEffect</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">titleRef</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        flush</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">post</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 修改执行时机，支持 pre, post, sync  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>这里的<code>flush:&quot;post&quot;</code>是将推迟副作用的初始运行，直到组件的首次渲染完成才执行。当然<code>flush</code> 选项还接受 <code>sync</code>，这将强制效果始终同步触发。然而，这是低效的，应该很少需要。</p>\n<p>保存代码，运行在浏览器后。刷新页面，我们会发现结果打印了1次（打印出元素）。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：Vue3.2+ 以后<code>watchPostEffect</code>是<code>watchEffect</code> 带有 <code>flush: &#39;post&#39;</code> 选项的别名。<code>watchSyncEffect</code>是<code>watchEffect</code> 带有 <code>flush: &#39;sync&#39;</code> 选项的别名。</p></blockquote>\n<h2 id=\"三、watch侦听\"><a href=\"#三、watch侦听\" class=\"headerlink\" title=\"三、watch侦听\"></a>三、watch侦听</h2><p>watch的API完全等同于组件<code>watch选项</code>的Property：</p>\n<ul>\n<li><p>watch需要侦听特定的数据源，并在回调函数中执行副作用。</p>\n</li>\n<li><p>默认情况下它是惰性的，只有当被侦听的源发生变化时才会执行回调。</p>\n</li>\n</ul>\n<p>与watchEffect的比较，watch允许我们：</p>\n<ul>\n<li><p>懒执行副作用（第一次不会直接执行）。</p>\n</li>\n<li><p>更具体的说明当哪些状态发生变化时，触发侦听器的执行。</p>\n</li>\n<li><p>访问侦听状态变化前后的值。</p>\n</li>\n</ul>\n<h3 id=\"3-1-侦听单个数据源\"><a href=\"#3-1-侦听单个数据源\" class=\"headerlink\" title=\"3.1. 侦听单个数据源\"></a>3.1. 侦听单个数据源</h3><p>watch侦听函数的数据源有两种类型：</p>\n<ul>\n<li><p>一个getter函数：但是该getter函数必须引用可响应式的对象（比如reactive或者ref）。</p>\n</li>\n<li><p>直接写入一个可响应式的对象，reactive或者ref（比较常用的是ref）。</p>\n</li>\n</ul>\n<p>下面通过几个案例来学习watch函数的使用。</p>\n<p><strong>案例一：watch侦听的数据源为一个getter函数。</strong></p>\n<p>我们在<code>08_watch使用</code>文件夹下新建：<code>WatchAPI.vue</code>组件。WatchAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;info.name&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">修改数据</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> reactive</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watch </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.侦听watch时,传入一个getter函数(该函数引用可响应式的对象)  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #65666B; font-style: italic\">// 侦听info对象中name的改变  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">newValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">oldValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldValue</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeData</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 改变info对象中的name  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们调用了watch函数来侦听info对象name属性的变化。其中watch函数需要接收两个参数，第一次参数是一个getter函数，该函数必须引用可响应式的对象。第二参数是侦听的回调函数，该函数会接收到一个新的值和一个旧的值，并在该函数中打印出新旧值。最后我们在App.vue根组件中导入和使用WatchAPI组件（不再贴代码）。</p>\n<p>保存代码，运行在浏览器的效果，如图10-20所示。刷新页面，点击修改数据按钮来修改info中的name后，我们可以看到watch已经侦听到info中name发生了改变，并打印出新旧值。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd7fe79f345e8d032f4faa.jpg\" alt=\"watch侦听的数据源为getter函数\"></p>\n<p><strong>案例二：watch侦听的数据源为reactive对象。</strong></p>\n<p>修改WatchAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">......  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 1.侦听watch时,传入一个getter函数  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// watch(() =&gt; info.name, (newValue, oldValue) =&gt; &#123;  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// console.log(&quot;newValue:&quot;, newValue, &quot;oldValue:&quot;, oldValue);  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// &#125;)  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 2.传入一个可响应式对象: reactive对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// reactive对象获取到的newValue和oldValue本身都是reactive对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">newValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">oldValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldValue</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeData</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>保存代码，运行在浏览器后刷新页面，点击修改数据按钮后，我们可以看到watch已经侦听到info中name发生了改变，并打印出新旧值（都为reactive对象）。</p>\n<p>如果希望newValue和oldValue是一个普通的对象的话，我们可以这样侦听，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">......</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 2.传入一个可响应式对象: reactive对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 如果希望newValue和oldValue是一个普通的对象，watch第一参数改成getter函数  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #9569EC\">...</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">newValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">oldValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldValue</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">......</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>保存代码，运行在浏览器后刷新页面，点击修改数据按钮后，我们可以看到watch已经侦听到info中name发生了改变，并打印出新旧值（都为普通对象）。</p>\n<p><strong>案例三：watch侦听的数据源为ref对象。</strong></p>\n<p>修改WatchAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">......  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">..</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">codeywhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// watch侦听ref对象，ref对象获取newValue和oldValue是value值的本身  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">newValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">oldValue:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldValue</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeData</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">name</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>保存代码，运行在浏览器后刷新页面，点击修改数据按钮后，我们可以看到watch已经侦听到name发生了改变，并打印出新旧值（都是name的value）。</p>\n<h3 id=\"3-2-侦听多个数据源\"><a href=\"#3-2-侦听多个数据源\" class=\"headerlink\" title=\"3.2. 侦听多个数据源\"></a>3.2. 侦听多个数据源</h3><p>侦听器还可以使用数组同时侦听多个源：</p>\n<p>我们在<code>08_watch使用</code>文件夹下新建：<code>WatchAPIMult.vue</code>组件。WatchAPIMult.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;info.name&#125;&#125;</span><span style=\"color: #CCCCCC\"> - </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;name&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">修改数据</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> reactive</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watch </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 1.定义可响应式的对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coder</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">20</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 2.侦听多数据源，参数一是一个数组：数组中可以有getter函数，ref对象，reactive对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">([()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #9569EC\">...</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age</span><span style=\"color: #505153\">]</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">[</span><span style=\"color: #61D0FF\">newInfo</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">newName</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">newAge</span><span style=\"color: #CCCCCC\">]</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> [</span><span style=\"color: #61D0FF\">oldInfo</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldName</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldAge</span><span style=\"color: #CCCCCC\">]</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">newInfo</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> newName</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> newAge</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">oldInfo</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldName</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldAge</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeData</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">name</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">jack</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们调用了watch函数来侦听多个数据源。watch函数的第一个参数接收的是一个数组，该数组中是支持侦听getter函数，ref对象和reactive对象的数据源。接着我们给watch的第二个参数传入回调函数，该回调函数接收的新值和旧值都是数组类型，然后我们在该函数中分别打印了新值和旧值。最后我们在App.vue根组件中导入和使用WatchAPIMult组件（不再贴代码）。</p>\n<p>保存代码，运行在浏览器的效果，如图10-21所示。刷新页面，点击修改数据按钮后，我们可以看到watch已经侦听到info中name和name都发生了改变，并打印出新旧值。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd80b09f345e8d0331232e.jpg\" alt=\"watch侦听多数据源\"></p>\n<h3 id=\"3-3-侦听响应式对象\"><a href=\"#3-3-侦听响应式对象\" class=\"headerlink\" title=\"3.3. 侦听响应式对象\"></a>3.3. 侦听响应式对象</h3><p>如果我们希望侦听一个数组或者对象，那么可以使用一个getter函数，并且对可响应对象进行解构。</p>\n<p>侦听响应式对象在上面的案例二中已经介绍过，下面看看侦听响应式数组，代码如下所示：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> names </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">([</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">abc</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">cba</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">nba</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">]);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 侦听响应式数组( 和对象的使用一样 )  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span><span style=\"color: #9569EC\">...</span><span style=\"color: #CCCCCC\">names</span><span style=\"color: #505153\">]</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">newValue</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldValue</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">names</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">push</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>如果是侦听对象时，我们希望侦听是一个深层的侦听，那么依然需要设置 <code>deep</code> 为true：</p>\n<ul>\n<li>也可以传入 <code>immediate</code> 立即执行。</li>\n</ul>\n<p>我们在<code>08_watch使用</code>文件夹下新建：<code>WatchAPIDeep.vue</code>组件。WatchAPIDeep.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;info.name&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">修改数据</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> reactive</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watch </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.定义可响应式的对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        friend</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 2.侦听响应式对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #9569EC\">...</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newInfo</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">oldInfo</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">newInfo</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> oldInfo</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        deep</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF; font-style: italic\">true</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        immediate</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF; font-style: italic\">true</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeData</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">friend</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">james</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">changeData</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们调用了watch函数来侦听一个对象。watch函数的第一个参数是一个getter函数，第二个参数传入回调函数，在该回调函数打印接收的新值和旧值，第三个参数一个watch的配置项。其中deep为true代表是一个深层的侦听，即当用户修改了info中friend对象的name也会被watch侦听到，如果为false则侦听不到。还有immediate为true代表watch的回调函数会先立即执行一次，当侦听到有数据变化时才再次执行该回调函数。最后我们在App.vue根组件中导入和使用WatchAPIDeep组件（不再贴代码）。</p>\n<p>保存代码，运行在浏览器后。刷新页面，默认会先立即执行一次watch的回调函数，当点击修改数据按钮后，我们可以看到watch可以深层侦听info中firend对象的name发生了改变。</p>\n<h2 id=\"四、组件的生命周期钩子\"><a href=\"#四、组件的生命周期钩子\" class=\"headerlink\" title=\"四、组件的生命周期钩子\"></a>四、组件的生命周期钩子</h2><p>我们前面说过 <code>setup</code> 可以用来替代 <code>data</code> 、 <code>methods</code> 、 <code>computed</code> 、<code>watch</code> 等等这些选项，也可以替代 <code>生命周期钩子</code>。</p>\n<p>那么setup中如何使用生命周期函数呢？</p>\n<ul>\n<li>可以使用直接导入的 <code>onXxx</code> 函数注册生命周期钩子。</li>\n</ul>\n<p>我们在<code>01_composition_api</code>项目的<code>src</code>目录下新建<code>09_生命周期钩子</code>文件夹，然后在该文件夹下新建：<code>App.vue</code>组件。</p>\n<p>App.vue根组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">点击+1：</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> onMounted</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> onUpdated</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> onUnmounted</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 生命周期钩子函数 （同一个生命周期函数可以存在多个）  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">onMounted</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">App Mounted1</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">onMounted</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">App Mounted2</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">onUpdated</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">App onUpdated</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">onUnmounted</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">App onUnmounted</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，在App组件中注册了<code>onBeforeMount、onMounted、onUpdated和onUnmounted</code>生命周期函数，其中<code>onMounted</code>生命周期函数我们注册了两次。</p>\n<p>然后我们修改main.js程序入口文件，将导入的App组件改为<code>09_生命周期钩子/App.vue</code>路径下的App组件。</p>\n<p>保存代码，运行在浏览器的效果，如图10-22所示。刷新页面，控制台会打印<code>App onBeforeMount、App Mounted1、App Mounted2</code>，每当点击一次按钮会打印一次<code>App onUpdated</code>。这里就不一一演示组件的销毁和其它的生命周期函数了。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd815d9f345e8d0332c09b.jpg\" alt=\"生命周期函数\"></p>\n<p>那么Compostion API提供了哪些生命周期函数呢？并且Compostion API的生命周期函数和Options API的生命周期函数有什么对应关系呢？请看下表：</p>\n<table>\n<thead>\n<tr>\n<th>选项式 API</th>\n<th>Hook inside <code>setup</code></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>beforeCreate</code></td>\n<td>Not needed*</td>\n</tr>\n<tr>\n<td><code>created</code></td>\n<td>Not needed*</td>\n</tr>\n<tr>\n<td><code>beforeMount</code></td>\n<td><code>onBeforeMount</code></td>\n</tr>\n<tr>\n<td><code>mounted</code></td>\n<td><code>onMounted</code></td>\n</tr>\n<tr>\n<td><code>beforeUpdate</code></td>\n<td><code>onBeforeUpdate</code></td>\n</tr>\n<tr>\n<td><code>updated</code></td>\n<td><code>onUpdated</code></td>\n</tr>\n<tr>\n<td><code>beforeUnmount</code></td>\n<td><code>onBeforeUnmount</code></td>\n</tr>\n<tr>\n<td><code>unmounted</code></td>\n<td><code>onUnmounted</code></td>\n</tr>\n<tr>\n<td><code>activated</code></td>\n<td><code>onActivated</code></td>\n</tr>\n<tr>\n<td><code>deactivated</code></td>\n<td><code>onDeactivated</code></td>\n</tr>\n<tr>\n<td>我们会发现<code>Compostion API</code>没有提供 <code>beforeCreate</code> 和 <code>created</code> 生命周期函数，而是直接使用<code>setup</code>函数来代替了（setup函数会在beforeCreate之前调用），如图10-23所示。</td>\n<td></td>\n</tr>\n</tbody></table>\n<p><img src=\"https://pic.imgdb.cn/item/65cd81979f345e8d0333560f.jpg\" alt=\"setup代替了beforeCreate和created\"></p>\n<h2 id=\"五、Provide-Inject\"><a href=\"#五、Provide-Inject\" class=\"headerlink\" title=\"五、Provide &#x2F; Inject\"></a>五、Provide &#x2F; Inject</h2><p>事实上我们之前还学习过<code>Provide</code>和<code>Inject</code>，Composition API也可以替代之前的 <code>Provide</code> 和 <code>Inject</code> 的选项。</p>\n<h3 id=\"5-1-Provide函数\"><a href=\"#5-1-Provide函数\" class=\"headerlink\" title=\"5.1. Provide函数\"></a>5.1. Provide函数</h3><p>我们可以通过 <code>provide</code>函数来给子组件或者子孙组件提供数据：</p>\n<ul>\n<li><p>可以通过 <code>provide</code> 函数来定义每个 property。</p>\n</li>\n<li><p><code>provide</code>函数可以传入两个参数：</p>\n</li>\n<li><p>name：提供的属性名称。</p>\n</li>\n<li><p>value：提供的属性值。</p>\n</li>\n</ul>\n<p>下面我们来通过一个案例来学习一下Provide函数的使用。我们在<code>01_composition_api</code>项目的<code>src</code>目录下新建<code>10_Provide和Inject</code>文件夹，然后在该文件夹下新建：<code>App.vue</code>组件。</p>\n<p>App.vue根组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        App组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;name&#125;&#125;</span><span style=\"color: #CCCCCC\"> - </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;age&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">App组件+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> provide</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 1.定义普通数据  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 2.定义响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">100</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 3.给子组件或者子孙组件提供数据  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> name</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 提供普通数据（只能读，不能修改）  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> counter</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 提供响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，在setup函数中调用了provide函数来给子组件或者子孙组件提供了<code>name与age</code>普通数据和<code>counter</code>响应式数据。其中提供的普通数据是只读不能修改，提供的响应式数据默认是可读可修改，并且是响应式的。</p>\n<p>然后我们修改main.js程序入口文件，将导入的App组件改为<code>10_Provide和Inject/App.vue</code>路径下的App组件。</p>\n<p>保存代码，运行在浏览器的效果，如图10-24所示。可以看到在自己本组件中能正常显示，点击按钮也能实现响应式刷新页面。那有些同学会问provide不是给子组件或者子孙组件提供数据吗？那么子组件和子孙组件如何获取？那我们继续来学习下一小节的inject函数。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd820b9f345e8d03346fb4.jpg\" alt=\"provide函数的基本使用\"></p>\n<h3 id=\"5-2-Inject-函数\"><a href=\"#5-2-Inject-函数\" class=\"headerlink\" title=\"5.2. Inject 函数\"></a>5.2. Inject 函数</h3><p>在后代组件中可以通过 <code>inject</code> 来注入需要的属性和对应的值：</p>\n<ul>\n<li><p>可以通过 <code>inject</code> 函数来注入需要的内容。</p>\n</li>\n<li><p><code>inject</code>可以传入两个参数：</p>\n</li>\n<li><p>要 inject 的 property 的 name。</p>\n</li>\n<li><p>默认值。</p>\n</li>\n</ul>\n<p>上面案例的App父组件已经完成数据的提供，那么它的子组件和孙子组件怎么获取提供的数据呢？要想获取父组件通过provide提供的数据，子组件或者孙子组件需要通过inject函数来获取。</p>\n<p>接着我们在<code>10_Provide和Inject</code>文件夹下新建：<code>Home.vue</code>组件。</p>\n<p>Home.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:8px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        Home组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;name&#125;&#125;</span><span style=\"color: #CCCCCC\"> - </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;age&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">homeIncrement</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">Home组件+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> inject </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 1.获取父组件provide提供的数据( 子组件和孙子组件获取的代码是一模一样的)  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">inject</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">inject</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">inject</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">homeIncrement</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">homeIncrement</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，该组件在setup函数中通过inject函数来注入父组件或者祖父组件使用provide函数提供的数据。其中<code>name与age</code>是注入普通对象（只读不能修改），<code>counter</code>则是响应式对象（可读可修改）。接着当点击button时，我们在子组件中修改了父组件提供的counter值。</p>\n<p>修改App组件，代码如下所示:</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        App组件......  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">home</span><span style=\"color: #DA67DA\">/&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> Home </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./Home.vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    components</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> Home </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">......</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>保存代码，运行在浏览器的效果，如图10-25所示。当我们点击App组件的按钮来在父组件修改counter时，App组件和Home组件的counter都同步变化，当我们点击Home组件的按钮来在子组件修改counter时，App组件和Home组件的counter也是同步变化。这就说明父组件提供的响应式数据，子组件不但能获取到，还保持了响应式。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd82749f345e8d03356d8e.jpg\" alt=\"inject函数的基本使用\"></p>\n<h3 id=\"5-3-共享响应式属性\"><a href=\"#5-3-共享响应式属性\" class=\"headerlink\" title=\"5.3. 共享响应式属性\"></a>5.3. 共享响应式属性</h3><p><strong>1.共享响应式的数据</strong></p>\n<p>为了增加 provide 值和 inject 值之间的响应性，其实我们可以在 provide 值时使用 <code>ref</code> 和 <code>reactive</code>对象。其中<code>ref</code>对象上面已经演示了，这里再看一下如何提供reactive响应式数据，代码如下所示：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// App父组件  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">100</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 1.提供响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> counter</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> info</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 2.修改响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeInfo</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 子组件（孙子组件）注入父组件（祖父组件）提供的响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">inject</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">inject</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span></span></code></pre></div><p><strong>2.修改响应式Property</strong></p>\n<p>因为父组件可以通过provide提供响应式数据给子组件，该响应式数据默认是可以在父组件被修改，也可以在子组件被修改。如果子组件也可以修改父组件提供的响应式数据，那么我们就很难追踪响应数据到底是在哪被修改的，为了保证单向数据流，我们一般建议：</p>\n<ul>\n<li><p>如果我们需要修改响应的数据，那么最好是在数据提供的位置来修改（如上案例应在App中修改counter）</p>\n</li>\n<li><p>其实我们还可以将修改数据的方法进行共享，在后代组件中进行调用（如上案例不应在Home中直接修改counter）。</p>\n</li>\n<li><p>有时候为了避免子组件修该父组件提供的数据，我们可以借助<code>readonly</code>函数，如下代码所示。</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">; </span><span style=\"color: #65666B; font-style: italic\">// 子组件注入时只能读，不能修改  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">provide</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">; </span><span style=\"color: #65666B; font-style: italic\">// 子组件注入时只能读，不能修改</span></span></code></pre></div><h2 id=\"六、Composition-API综合练习\"><a href=\"#六、Composition-API综合练习\" class=\"headerlink\" title=\"六、Composition API综合练习\"></a>六、Composition API综合练习</h2><p>前面我们已经学习了<code>setup、reactive、ref、computed、watchEffect、watch、provide、inject</code>等等Composition API，那下面将通过一个Composition API的综合练习来巩固一下组合API的使用以及代码逻辑的封装（即Hook函数的封装）。其中该综合练习包含以下功能：</p>\n<ul>\n<li><p>计数器案例的实现。</p>\n</li>\n<li><p>修改网页的标题。</p>\n</li>\n<li><p>完成一个监听界面滚动位置。</p>\n</li>\n</ul>\n<p>在使用Composition API之前，我们先看看用Options API是如何实现该功能。</p>\n<p>我们在<code>01_composition_api</code>项目的<code>src</code>目录下新建<code>11_compositionAPI综合练习</code>文件夹，然后在该文件夹下分别新建：<code>App.vue，OptionsAPIExample.vue</code>组件。</p>\n<p>OptionsAPIExample.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">&lt;!--1.计数器案例 --&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数*2: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;doubleCounter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">decrement</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">-1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">data</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.2计数器案例的逻辑代码  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        counter</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #9569EC\">100</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    computed</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.3计数器案例的逻辑代码  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">doubleCounter</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF; font-style: italic\">this</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">counter </span><span style=\"color: #9569EC\">*</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    methods</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.4计数器案例的逻辑代码  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF; font-style: italic\">this</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">decrement</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF; font-style: italic\">this</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #9569EC\">--</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，该案例我们仅实现了计数器的案例。为了保证代码的简洁易懂，其它修改网页标题和监听页面滚动的代码逻辑这里暂时先不实现（后面直接用组合API来实现）。最后我们在App.vue根组件中导入和使用OptionsAPIExample组件（不再贴代码）。</p>\n<p>然后我们修改main.js程序入口文件，将导入的App组件改为<code>11_compositionAPI综合练习/App.vue</code>路径下的App组件。</p>\n<p>保存代码，运行在浏览器的效果，如图10-26所示。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd83449f345e8d033765a9.jpg\" alt=\" Options API实现的计数器\"></p>\n<p>下面我们再用Composition API来实现该功能。我们在<code>11_compositionAPI综合练习</code>文件夹下新建：<code>CompositionAPIExample.vue</code>组件。</p>\n<p>CompositionAPIExample.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">&lt;!-- 1.计数器案例 --&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数*2: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;doubleCounter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">decrement</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">-1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> computed </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.1计数器案例的逻辑代码  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">100</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> doubleCounter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">computed</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">*</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">decrement</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">--</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            decrement  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，该案例我们仅实现了计数器的案例。其它修改网页标题和监听页面滚动的代码逻辑这里也暂时先不实现。最后我们在App.vue根组件中导入和使用CompositionAPIExample组件（不再贴代码）。</p>\n<p>保存代码，运行在浏览器的效果和Options API实现的效果一模一样。通过这两个案例，我们可以发现：</p>\n<ul>\n<li><p>Options API的特点就是在对应的属性中编写对应的功能模块</p>\n</li>\n<li><p>但Options API有一个很大的弊端是对应的代码逻辑被拆分到各个属性中，当组件变得更大、复杂时，同一个功能的逻辑会被拆分的很分散（如上面的计数器功能逻辑被拆分到各个选项中），不利于代码的阅读和理解。</p>\n</li>\n<li><p>Composition API的特点是能将同一个逻辑关注点相关的代码收集在一起，方便代码的封装和复用，也更利于代码的阅读和理解。</p>\n</li>\n<li><p>Composition API用了比较多的函数，用起来稍微比Options API复杂一点，但是函数式编程对TS支持更友好。</p>\n</li>\n</ul>\n<p>对比完Options API和Composition API编写计数器案例的优缺点之后，下面我们来看看如何对Composition API编写的代码逻辑进行封装和复用。在Options API编写方式中，我们已知道代码逻辑的封装和复用可以使用Mixin混入，那在Composition API中我们可以将关注点相关的代码逻辑封装到一个函数中，该函数我们一般会使用<code>useXx</code>来命名（社区默认准寻的规范），并且以<code>useXx</code>开头的函数我们称之为自定义Hook函数。</p>\n<h3 id=\"6-1-useCounter\"><a href=\"#6-1-useCounter\" class=\"headerlink\" title=\"6.1. useCounter\"></a>6.1. useCounter</h3><p>认识Hook函数之后，下面我们来把上面计数器案例的代码逻辑封装到一个<code>useCounter</code>的Hook函数中。</p>\n<p>我们在<code>11_compositionAPI综合练习</code>文件夹下新建：<code>hooks/useCounter.js</code>文件。</p>\n<p>useCounter.js文件封装useCounter Hook函数，代码如下所示：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> computed </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useCounter</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 1.1计数器案例的逻辑代码  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">100</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> doubleCounter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">computed</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">*</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">decrement</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">--</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">   </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">   </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">   </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    decrement  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>可以看到，我们在该文件中默认导出一个函数（也支持匿名函数），在该函数中我们把CompositionAPIExample组件实现计数器案例的代码逻辑全部抽取过来了。</p>\n<p>接着修改CompositionAPIExample组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">.....  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> useCounter </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./hooks/useCounter</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.计数器案例的代码逻辑抽取到useCounter hook 中了  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useCounter</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，该组件之前实现计数器案例的逻辑代码已经抽取到了useCounter函数中，这时我们只要导入useCounter函数，并在setup中调用该函数便可以拿到返回的响应式数据和事件函数，然后直接返回给模板使用。保存代码，运行在浏览器的效果和没抽取前一模一样。</p>\n<h3 id=\"6-2-useTitle\"><a href=\"#6-2-useTitle\" class=\"headerlink\" title=\"6.2. useTitle\"></a>6.2. useTitle</h3><p>实现完计数器案例之后，下面我们接着再CompositionAPIExample组件中来实现修改网页标题的功能。修改CompositionAPIExample组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">..</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 2.修改网页的标题案例  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coder</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">document</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">title </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">titleRef</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #65666B; font-style: italic\">// 更新网页标题  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，只在CompositionAPIExample中的setup函数中添加两行代码即可以。保存代码，运行在浏览器的效果，如图10-27所示。已经将网页的标题修改为coder。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd840c9f345e8d0339520a.jpg\" alt=\"修改网页的标题\"></p>\n<p>像这种修改网页标题的代码逻辑可能在其它组件中还会再次使用到，那么我们就可以将该功能封装到一个Hook函数中。我们在<code>11_compositionAPI综合练习</code>文件夹下新建：<code>hooks/useTitle.js</code>文件。</p>\n<p>useTitle.js文件封装useTitle Hook函数，代码如下所示：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watch </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 使用匿名函数，并该函数需接收一个参数  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">title</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">默认的title</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">title</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 侦听titleRef变化，一旦被修改就更新   </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">watch</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">titleRef</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">document</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">title </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> newValue   </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    immediate</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF; font-style: italic\">true</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 侦听的回调函数先执行一次  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> titleRef  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>修改CompositionAPIExample组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">..</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> useTitle </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./hooks/useTitle</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">..</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 2.修改网页的标题案例  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useTitle</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coder</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setTimeout</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 3秒后修改titleRef的值，useTitle函数的watch侦听到会修改标题  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">titleRef</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3000</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们先导入useTitle函数，接着在setup中调用useTitle函数初始化标题为coder，然后过了2秒之后将标题修改为why。保存代码，运行在浏览器后。网页的标题在3秒后有coder修改为why。</p>\n<h3 id=\"6-3-useScrollPosition\"><a href=\"#6-3-useScrollPosition\" class=\"headerlink\" title=\"6.3. useScrollPosition\"></a>6.3. useScrollPosition</h3><p>实现完修改网页的标题之后，我们接着继续再CompositionAPIExample组件中来实现监听页面滚动位置的功能。修改CompositionAPIExample组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        .....  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">&lt;!-- 3.显示页面滚动位置 --&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">p</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">width: 3000px;height: 5000px;</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        width:3000px height:5000px的，模拟页面滚动  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">p</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">position: fixed;top:20px;right:20px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">scrollX: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;scrollX&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">scrollY: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;scrollY&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">..</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">......</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 3.监听页面滚动  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> scrollX </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> scrollY </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">document</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">addEventListener</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">scroll</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">scrollX</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">window</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">scrollX</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">scrollY</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">window</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">scrollY</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> scrollX</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> scrollY</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们先在template中编写宽和高超出屏幕大小的p元素（模拟页面可滚动），接着在setup函数监听了页面的滚动，并在该回调函数中给scrollX和scrollY变量赋当前滚动的值。最后在return函数中返回scrollX和scrollY变量给temlpate来显示当前滚动的位置。保存代码，运行在浏览器的效果，如图10-28所示。上下滚动页面的时候，页面的右上角上能显示当前滚动位置值。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd85449f345e8d033c54b3.jpg\"></p>\n<p>那如果该功能也会被再次使用到，我们依然可以将该功能封装到一个Hook函数中。我们在<code>11_compositionAPI综合练习</code>文件夹下新建：<code>hooks/useScrollPosition.js</code>文件。</p>\n<p>useScrollPosition.js文件封装useScrollPosition Hook函数，代码如下所示：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 自定义 useScrollPosition Hook函数  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useScrollPosition</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> scrollX </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> scrollY </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">document</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">addEventListener</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">scroll</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">scrollX</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">window</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">scrollX</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">scrollY</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">window</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">scrollY</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">scrollX</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> scrollY</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 返回ref响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>修改CompositionAPIExample组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #CCCCCC\">.......  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> useCounter </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./hooks/useCounter</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> useTitle </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./hooks/useTitle</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> useScrollPosition </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./hooks/useScrollPosition</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 1.计数器案例(可直接解构，如果返回的是reactive对象则不能直接解构使用)  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useCounter</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 2.修改网页标题案例  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> titleRef </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useTitle</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coder</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setTimeout</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">titleRef</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">3000</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 3.监听页面滚动位置案例 (可直接解构，因为Hook函数返回对象属性是ref对象)  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> scrollX</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> scrollY </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useScrollPosition</span><span style=\"color: #505153\">();</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> doubleCounter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> decrement</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> scrollX</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> scrollY</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们先导入useScrollPosition函数，接着在setup中调用useScrollPosition函数来获取到当前滚动的值。如果滚动页面了，useScrollPosition函数里会监听到并修改scrollX和scrollY响应式变量的值，同时更新页面。保存代码，运行在浏览器后。滚动网页时可以发现页面上右上角的scrollX和scrollY能显示当前滚动的位置。</p>\n<h2 id=\"七、script-setup语法\"><a href=\"#七、script-setup语法\" class=\"headerlink\" title=\"七、script setup语法\"></a>七、script setup语法</h2><p>当我们在编写单文件组件（即.vue文件）的时候，除了 <code>&lt;script&gt;</code> 语法，其实Vue3还支持<code>&lt;script setup&gt;</code>语法，它方便我们在script顶层来编写setup相关的代码。<code>setup script</code>语法的代码看起来简单了很多，开发效率大大的提高。该语法是在2020-10-28号提出，在Vue3.2版本之前它还只是一个实验性功能，但是到了Vue3.2版本<code>&lt;script setup&gt;</code>语法已从实验状态毕业，现在被认为是稳定的了。</p>\n<p><code>&lt;script setup&gt;</code> 是在单文件组件 (SFC) 中使用组合式 API 的编译时语法糖。相比于普通的 <code>&lt;script&gt;</code> 语法，它具有更多优势：</p>\n<ul>\n<li><p>更少的样板内容，更简洁的代码。</p>\n</li>\n<li><p>能够使用纯 Typescript 声明 props 和抛出事件。</p>\n</li>\n<li><p>更好的运行时性能 (其模板会被编译成与其同一作用域的渲染函数，没有任何的中间代理)。</p>\n</li>\n<li><p>更好的 IDE 类型推断性能 (减少语言服务器从代码中抽离类型的工作)。</p>\n</li>\n</ul>\n<h3 id=\"7-1-基本使用\"><a href=\"#7-1-基本使用\" class=\"headerlink\" title=\"7.1. 基本使用\"></a>7.1. 基本使用</h3><p>我们来看一下用<code>&lt;script setup&gt;</code>语法是如何使用的：</p>\n<ul>\n<li><p>要使用这个语法，需要将 <code>setup</code> attribute 添加到 <code>&lt;script&gt;</code> 代码块上。</p>\n</li>\n<li><p>里面的代码会被编译成组件 <code>setup()</code> 函数的内容。</p>\n</li>\n<li><p>这意味着与普通的 <code>&lt;script&gt;</code> 只在组件被首次引入的时候执行一次不同，<code>&lt;script setup&gt;</code> 中的代码会在<strong>每次组件实例被创建的时候执行</strong>。</p>\n</li>\n<li><p>当使用 <code>&lt;script setup&gt;</code> 的时候，任何在 <code>&lt;script setup&gt;</code> 声明的顶层的绑定 (包括变量，函数声明，以及 import 引入的内容) 都能在模板中直接使用。</p>\n</li>\n</ul>\n<p>下面我们使用<code>&lt;script setup&gt;</code>语法来编写计数器案例，我们在<code>01_composition_api</code>项目的<code>src</code>目录下新建<code>12_script_setup顶层编写方式</code>文件夹，然后在该文件夹下分别新建：<code>App.vue，ScriptSetupExample.vue</code>组件。</p>\n<p>ScriptSetupExample.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">// 1.script setup语法的顶层编写方式  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 2.ref、counter、increment是在顶层绑定，所以都能在模板中直接使用  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">counter</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，该组件使用了<code>&lt;script setup&gt;</code>语法的顶层编写方式，在顶层绑定了<code>ref、counter、increment</code>，所以都能在模板中直接使用他们。最后我们在App.vue根组件中导入和使用ScriptSetupExample组件（不再贴代码）。</p>\n<p>然后我们修改main.js程序入口文件，将导入的App组件改为<code>12_script_setup顶层编写方式/App.vue</code>路径下的App组件。</p>\n<p>保存代码，运行在浏览器的效果，如图10-29所示。已实现计数器案例。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd86029f345e8d033e278d.jpg\" alt=\"script setup语法的基本使用\"></p>\n<p>当使用 <code>&lt;script setup&gt;</code> 的时候，任何在 <code>&lt;script setup&gt;</code> 声明的顶层的绑定都能在模板中直接使用。例如：声明的普通变量，响应式变量，函数，import 引入的内容（包含函数，对象，组件，动态组件，指令等等）。当是响应式状态时需要明确使用响应式 APIs 来创建。和从 <code>setup()</code> 函数中返回值一样，ref 值在模板中使用的时候会自动解包，如下代码所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">MyComponent</span><span style=\"color: #DA67DA\"> /&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">component</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">:is</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Foo</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\"> /&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h4</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">v-my-directive</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">This is a Heading</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h1</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123; capitalize('hello') &#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">count++</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123; count &#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">log</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123; msg &#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">// script setup语法的顶层的绑定( 下面声明的绑定都可以直接在模板中使用 )  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> MyComponent </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./MyComponent.vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> Foo </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./Foo.vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定动态组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> myDirective </span><span style=\"color: #9569EC\">as</span><span style=\"color: #CCCCCC\"> vMyDirective </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./MyDirective.js</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定指令  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> capitalize </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./helpers</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定工具函数  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定ref函数  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> count </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">0</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定响应式变量  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> msg </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">Hello!</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定普通变量  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 声明绑定函数  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">msg</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>上面代码列举了在 <code>&lt;script setup&gt;</code>中常用的顶层的绑定。上面代码所声明的组件，函数，指令等这里就不一一实现了。大家只要知道在<code>&lt;script setup&gt;</code>中顶层的绑定会被暴露给模板使用就可以了。</p>\n<h3 id=\"7-2-defineProps和defineEmits\"><a href=\"#7-2-defineProps和defineEmits\" class=\"headerlink\" title=\"7.2. defineProps和defineEmits\"></a>7.2. defineProps和defineEmits</h3><p>上面我们已经学会了<code>&lt;script setup&gt;</code>语法的基本使用，那么在这种语法下，我们应该如何定义props和如何发出事件呢？在 <code>&lt;script setup&gt;</code> 中必须使用 <code>defineProps</code> 和 <code>defineEmits</code> APIs 来声明 <code>props</code> 和 <code>emits</code> ，它们具备完整的类型推断并且在 <code>&lt;script setup&gt;</code> 中是直接可用的（Vue3.2版本以后不需要导入）。</p>\n<p>我们在<code>12_script_setup顶层编写方式</code>文件夹下新建：<code>DefinePropsEmitAPI.vue</code>组件。</p>\n<p>DefinePropsEmitAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:8px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">DefinePropsEmitAPI组件</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">p</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;message&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">p</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">emitEvent</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">发射emit事件</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">// Vue3.2以后defineProps和defineEmits不需要导入(当前项目Vue安装的版本是：3.2.29)  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 1.定义props属性（等同于Options API的props选项）  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> props </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">defineProps</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// message: String,  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    message</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    type</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> String</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    default</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">默认的message</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 2.注册需要触发的emit事件  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> emit </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">defineEmits</span><span style=\"color: #505153\">([</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">]);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 3.点击 发射emit事件 按钮的回调  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">emitEvent</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">子组件拿到父组件传递进来的message:</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">props</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">message</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">emit</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 触发 increment 事件，传递参数：1  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们使用<code>defineProps</code>函数来给组件定义了message属性，使用<code>defineEmits</code>函数来给组件注册了increment事件，并返回emit函数。当点击button时，先打印父组件传递进来的message，然后使用emit函数来触发事件。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如何查看当前项目依赖Vue的具体版本：可看node_modules&#x2F;vue&#x2F;package.json文件中的version属性。\\</p></blockquote>\n<p>接着修改App组件，代码如下所示:</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    App组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">&lt;!-- &lt;ScriptSetupExample&gt;&lt;/ScriptSetupExample&gt; --&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">DefinePropsEmitAPI</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">message</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">App传递过来的message</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@increment</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">getCounter</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">/&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> ScriptSetupExample </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./ScriptSetupExample.vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> DefinePropsEmitAPI </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./DefinePropsEmitAPI.vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">getCounter</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">number</span><span style=\"color: #505153\">)</span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">App 组件拿到子组件传递过来的number：</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">+</span><span style=\"color: #CCCCCC\"> number</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们先导入<code>DefinePropsEmitAPI</code>组件，接着在template中使用该组件时，给它传递了message属性和监听了increment事件 。</p>\n<p>保存代码，运行在浏览器后点击<code>发射emit事件</code>按钮，便会调用emitEvent函数，控制台输出如图]所示：</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd86ca9f345e8d03402191.jpg\" alt=\"defineProps和defineEmits的使用\"></p>\n<p>有关于<code>defineProps</code> 和 <code>defineEmits</code> 函数，我们还需要注意的是：</p>\n<ul>\n<li><p><code>defineProps</code> 和 <code>defineEmits</code> APIs都是只在 <code>&lt;script setup&gt;</code> 中才能使用的<strong>编译器宏</strong>。他们不需要导入且会随着 <code>&lt;script setup&gt;</code> 处理过程一同被编译掉。</p>\n</li>\n<li><p><code>defineProps</code> 接收与 <code>props</code> 选项相同的值，<code>defineEmits</code> 也接收 <code>emits</code> 选项相同的值。</p>\n</li>\n<li><p><code>defineProps</code> 和 <code>defineEmits</code> 在选项传入后，会提供恰当的类型推断。</p>\n</li>\n<li><p>传入到 <code>defineProps</code> 和 <code>defineEmits</code> 的选项会从 setup 中提升到模块的范围。因此，传入的选项不能引用在 setup 范围中声明的局部变量。这样做会引起编译错误。但是，它_可以_引用导入的绑定，因为它们也在模块范围内。</p>\n</li>\n</ul>\n<h3 id=\"7-3-defineExpose\"><a href=\"#7-3-defineExpose\" class=\"headerlink\" title=\"7.3. defineExpose\"></a>7.3. defineExpose</h3><p>使用 <code>&lt;script setup&gt;</code> 语法的组件是<strong>默认关闭</strong>的，即通过模板 ref 或者 <code>$parent</code> 链获取到的组件的公开实例，该实例是不会暴露任何在 <code>&lt;script setup&gt;</code> 中声明的绑定。所以为了在 <code>&lt;script setup&gt;</code> 语法组件中明确要暴露出去的属性，我们需要使用 <code>defineExpose</code> 编译器宏。</p>\n<p>我们在<code>12_script_setup顶层编写方式</code>文件夹下新建：<code>DefineExposeAPI.vue</code>组件。</p>\n<p>DefineExposeAPI.vue子组件，代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:8px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        DefineExposeAPI 组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 普通数据  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">showMessage</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #505153\">&#123;</span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">showMessage方法</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">)&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 方法  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 该组件暴露出去的属性（ age,name,showMessage ）  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">defineExpose</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">showMessage</span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们在该组件中定义了age，name和showMessage方法，然后通过<code>defineExpose</code> API将这3个属性暴露出去。</p>\n<p>接着修改App组件，代码如下所示（省略的代码已注释）:</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">app</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">style</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">border:1px solid #ddd;margin:4px</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">App组件  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    .....  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">DefineExposeAPI</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">ref</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">defineExposeAPI</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;&lt;/</span><span style=\"color: #9569EC; font-style: italic\">DefineExposeAPI</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> watchEffect </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> DefineExposeAPI </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">./DefineExposeAPI.vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 获取DefineExposeAPI组件的实例和该组件暴露的属性  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> defineExposeAPI </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC; font-style: italic\">null</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">watchEffect</span><span style=\"color: #505153\">(()</span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">defineExposeAPI</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 组件的实例  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">defineExposeAPI</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">value</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 响应式数据  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">defineExposeAPI</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">value</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">age</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">defineExposeAPI</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">value</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">showMessage</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">flush</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">post</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">...</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>可以看到，我们用ref定义了<code>defineExposeAPI</code>变量，并绑定到<code>DefineExposeAPI</code>组件的ref属性上来获取该组件的实例。然后在watchEffect函数中获取该组件实例和该组件暴露出来的：<code>name，age和showMessage</code>属性。</p>\n<p>保存代码，运行在浏览器后，控制台输出如图10-31所示。即父组件App可以访问到子组件暴露出来的<code>name，age和showMessage</code>属性。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd87c39f345e8d0342ad42.jpg\" alt=\"defineExpose的使用\"></p>\n<h3 id=\"7-4-useSlots和useAttrs\"><a href=\"#7-4-useSlots和useAttrs\" class=\"headerlink\" title=\"7.4. useSlots和useAttrs\"></a>7.4. useSlots和useAttrs</h3><p>在学习setup函数时，该函数主要有两个参数：props和context，其中context里面包含<code>slots，attrs，emit</code>三个属性。那在 <code>&lt;script setup&gt;</code>中应该如何拿到<code>slots，attrs</code>属性？虽然在 <code>&lt;script setup&gt;</code> 使用 <code>slots</code> 和 <code>attrs</code> 的情况应该是很罕见的（因为可以在模板中通过 <code>$slots</code> 和 <code>$attrs</code> 来访问它们）。在你的确需要使用它们的罕见场景中，可以分别用 <code>useSlots</code> 和 <code>useAttrs</code> 两个辅助函数。代码如下所示：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">setup</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> useSlots</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> useAttrs </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> slots </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useSlots</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 拿到该组件的插槽，等于setup函数中的context.slots  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> attrs </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useAttrs</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 拿到该组件所有的属性，等于setup函数中的context.attrs  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p><code>useSlots</code> 和 <code>useAttrs</code> 是真实的运行时函数（需要导入后使用），它会返回与 <code>setupContext.slots</code> 和 <code>setupContext.attrs</code> 等价的值，同样也能在普通的组合式 API 中使用。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>学如逆水行舟，不进则退</p>\n<p><code>2023</code> <code>09</code> <code>22</code></p>\n","text":"一、computed在前面我们讲解过计算属性computed：当我们的某些属性是依赖其他状态时，我们可以使用计算属性来处理 在前面的Options API中，我...","permalink":"/post/前端框架开发【十一】composition（二）","photos":[],"count_time":{"symbolsCount":"41k","symbolsTime":"37 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81computed\"><span class=\"toc-text\">一、computed</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-computed%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">1.1. computed基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E7%9A%84-get-%E5%92%8C-set-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">1.2. 计算属性的 get 和 set 方法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81watchEffect%E4%BE%A6%E5%90%AC\"><span class=\"toc-text\">二、watchEffect侦听</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-watchEffect%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2.1. watchEffect基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-watchEffect%E5%81%9C%E6%AD%A2%E4%BE%A6%E5%90%AC\"><span class=\"toc-text\">2.2. watchEffect停止侦听</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-watchEffect%E6%B8%85%E9%99%A4%E5%89%AF%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">2.3. watchEffect清除副作用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-watchEffect%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA\"><span class=\"toc-text\">2.4. watchEffect执行时机</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81watch%E4%BE%A6%E5%90%AC\"><span class=\"toc-text\">三、watch侦听</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E4%BE%A6%E5%90%AC%E5%8D%95%E4%B8%AA%E6%95%B0%E6%8D%AE%E6%BA%90\"><span class=\"toc-text\">3.1. 侦听单个数据源</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E4%BE%A6%E5%90%AC%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E6%BA%90\"><span class=\"toc-text\">3.2. 侦听多个数据源</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E4%BE%A6%E5%90%AC%E5%93%8D%E5%BA%94%E5%BC%8F%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">3.3. 侦听响应式对象</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90\"><span class=\"toc-text\">四、组件的生命周期钩子</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81Provide-Inject\"><span class=\"toc-text\">五、Provide &#x2F; Inject</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-Provide%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.1. Provide函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-Inject-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">5.2. Inject 函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-%E5%85%B1%E4%BA%AB%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">5.3. 共享响应式属性</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81Composition-API%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\">六、Composition API综合练习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-useCounter\"><span class=\"toc-text\">6.1. useCounter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-useTitle\"><span class=\"toc-text\">6.2. useTitle</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-3-useScrollPosition\"><span class=\"toc-text\">6.3. useScrollPosition</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81script-setup%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">七、script setup语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-1-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">7.1. 基本使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-2-defineProps%E5%92%8CdefineEmits\"><span class=\"toc-text\">7.2. defineProps和defineEmits</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-3-defineExpose\"><span class=\"toc-text\">7.3. defineExpose</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-4-useSlots%E5%92%8CuseAttrs\"><span class=\"toc-text\">7.4. useSlots和useAttrs</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol>","author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"项目复盘报告【一】","uid":"48eec35ba806f4293b8f0b679413e7ce","slug":"项目复盘报告【一】","date":"2023-10-01T09:23:29.000Z","updated":"2024-02-13T09:30:51.792Z","comments":true,"path":"api/articles/项目复盘报告【一】.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65cb36a29f345e8d03b81368.jpg","text":"前言这是《黑马程序员》推出的一个电商项目的课程，目前项目实现接口 17+，视频教程实际上并没有做完这个项目，大约完成了项目的80%，还有一些功能点没有做好。 现...","permalink":"/post/项目复盘报告【一】","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"智慧商城项目","slug":"智慧商城项目","count":7,"path":"api/categories/智慧商城项目.json"}],"tags":[{"name":"项目","slug":"项目","count":8,"path":"api/tags/项目.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}},"next_post":{"title":"API（一）","uid":"d096773a431b322abbf217863a93a881","slug":"前端框架开发【十】composition（一）","date":"2023-09-21T03:46:16.000Z","updated":"2024-02-15T03:49:31.495Z","comments":true,"path":"api/articles/前端框架开发【十】composition（一）.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","text":"一、认识Composition API在Vue2中，我们编写组件的方式是Options API： Options API的一大特点就是在对应的属性中编写对应的功...","permalink":"/post/前端框架开发【十】composition（一）","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}}}