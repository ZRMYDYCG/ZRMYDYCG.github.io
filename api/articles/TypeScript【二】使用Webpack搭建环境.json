{"title":"TypeScript【二】使用Webpack搭建环境","uid":"8341e59134e12dac24934a69216cde75","slug":"TypeScript【二】使用Webpack搭建环境","date":"2023-09-07T03:12:26.000Z","updated":"2024-02-09T04:51:42.901Z","comments":true,"path":"api/articles/TypeScript【二】使用Webpack搭建环境.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c5af439f345e8d03dbbd4f.jpg","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>学习任何的开发，我们都需要对应的环境：包括TypeScript的编译环境和开发工具。</p>\n<p>我们就来完成它们的搭建，后续就可以愉快的来写TypeScript代码了。</p>\n<h2 id=\"1-环境搭建\"><a href=\"#1-环境搭建\" class=\"headerlink\" title=\"1. 环境搭建\"></a>1. 环境搭建</h2><h3 id=\"1-1-TypeScript环境安装\"><a href=\"#1-1-TypeScript环境安装\" class=\"headerlink\" title=\"1.1. TypeScript环境安装\"></a>1.1. TypeScript环境安装</h3><p>TypeScript最终会被编译成JavaScript代码：</p>\n<p><img src=\"https://pic.imgdb.cn/item/65c464a09f345e8d03d51409.jpg\"></p>\n<p>那么我们必然需要对应的编译环境：</p>\n<p>安装命令</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">typescript</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-g</span></span></code></pre></div><p>查看版本</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">tsc</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">--version</span></span></code></pre></div><h3 id=\"1-2-tsc简单代码测试\"><a href=\"#1-2-tsc简单代码测试\" class=\"headerlink\" title=\"1.2. tsc简单代码测试\"></a>1.2. tsc简单代码测试</h3><p>打开VSCode，并且新建一个个文件：index.ts</p>\n<p>index.ts 代码如下：</p>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 定义一个变量</span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">message</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">string</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">abc</span><span style=\"color: #505153\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">message</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">123</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 定义一个函数</span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">sum</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">num1</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">number</span><span style=\"color: #505153\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">num2</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">number</span><span style=\"color: #505153\">)</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">number</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC; font-style: italic\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">num1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">num2</span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC\">sum</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">abc</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">cba</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">)</span></span></code></pre></div><p>我们会发现有两个地方都会报错：</p>\n<p>错误一：不能将类型 “123” 分配给类型 “string”</p>\n<p><img src=\"https://pic.imgdb.cn/item/65c468789f345e8d03de79ae.jpg\"></p>\n<p>错误二：类型 “abc” 的参数不能赋给类型 “number” 的参数</p>\n<p><img src=\"https://pic.imgdb.cn/item/65c4689f9f345e8d03ded49c.jpg\"></p>\n<p>上面两个错误都是因为我们的代码已经增加了类型约束，不能随便赋值其他类型给我们的变量。</p>\n<p>将代码修改正确如下：</p>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 定义一个变量  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">message</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">string</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">abc</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">message</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Hello World</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 定义一个函数  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">sum</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">num1</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">number</span><span style=\"color: #505153\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">num2</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">number</span><span style=\"color: #505153\">)</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">number</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC; font-style: italic\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">num1</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">+</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">num2</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">sum</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">20</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">30</span><span style=\"color: #505153\">);</span></span></code></pre></div><p>将代码编译为JavaScript的代码</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">tsc</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">index.ts</span></span></code></pre></div><p><img src=\"https://pic.imgdb.cn/item/65c46a7b9f345e8d03e32e2d.jpg\"></p>\n<p>我们会发现，生成了一个index.js文件，并且其中的代码就是普通的JavaScript代码。</p>\n<p><strong>问题：每次都这样测试会不会太麻烦了呢？</strong></p>\n<p>如果每次我们写完一个TypeScript代码都需要像上面的步骤一样，一点点去完成测试就会过于麻烦，我们可以怎么做呢？</p>\n<ul>\n<li><p>直接配置webpack，让webpack对我们编写的代码进行一个编译，并且自动引入编译后的js文件。</p>\n</li>\n<li><p>而且webpack可以在代码修改后重新帮助我们进行编译，并且自动刷新浏览器，不需要手动操作。</p>\n</li>\n</ul>\n<h2 id=\"2-项目环境\"><a href=\"#2-项目环境\" class=\"headerlink\" title=\"2. 项目环境\"></a>2. 项目环境</h2><h3 id=\"2-1-项目环境的基础配置\"><a href=\"#2-1-项目环境的基础配置\" class=\"headerlink\" title=\"2.1. 项目环境的基础配置\"></a>2.1. 项目环境的基础配置</h3><p>为了之后的学习和使用方便，可以配置一个webpack的环境。</p>\n<p>配置目的：</p>\n<p>在环境中我们编写对应的TypeScript代码，让webpack自动帮助我们编译，并且在浏览器中查看结果。</p>\n<p>注意：</p>\n<p>这里需要对npm和webpack有一些简单的了解，不会非常复杂。</p>\n<h4 id=\"2-1-1-创建一个简单的项目目录结构\"><a href=\"#2-1-1-创建一个简单的项目目录结构\" class=\"headerlink\" title=\"2.1.1. 创建一个简单的项目目录结构\"></a>2.1.1. 创建一个简单的项目目录结构</h4><p>新建一个新的目录：LearnTypeScript，并且创建如下的目录结构</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">|-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">index.html</span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">|-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">build</span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">|</span><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">webpack.config.js</span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">|-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">src</span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">|</span><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">-</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">main.ts</span></span></code></pre></div><p>目录和文件夹结构分析:</p>\n<ul>\n<li><p>index.html 是跑在浏览器上的模块文件</p>\n</li>\n<li><p>build 文件夹中用于存放webpack的配置信息</p>\n</li>\n<li><p>src 用于存放我们之后编写的所有TypeScript代码</p>\n</li>\n</ul>\n<h4 id=\"2-1-2-使用npm管理项目的依赖\"><a href=\"#2-1-2-使用npm管理项目的依赖\" class=\"headerlink\" title=\"2.1.2. 使用npm管理项目的依赖\"></a>2.1.2. 使用npm管理项目的依赖</h4><p>webpack 本身需要有很多的依赖，并且之后我们也需要启动 node 服务来快速浏览 index.html 模板以及编译后的 JavaScript 代码。</p>\n<p>我们要使用 npm 来初始化 package.json 文件：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">init</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-y</span></span></code></pre></div><h4 id=\"2-1-3-本地依赖-TypeScript\"><a href=\"#2-1-3-本地依赖-TypeScript\" class=\"headerlink\" title=\"2.1.3. 本地依赖 TypeScript\"></a>2.1.3. 本地依赖 TypeScript</h4><p>为什么需要本地依赖 TypeScript ?</p>\n<ul>\n<li>因为我们之后是通过webpack进行编译我们的TypeScript代码的，并不是通过tsc来完成的。（tsc使用的是全局安装的TypeScript依赖）</li>\n<li>那么webpack会在本地去查找TypeScript的依赖，所以我们是需要本地依赖TypeScript的；</li>\n</ul>\n<p>安装本地TypeScript依赖</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">typescript</span></span></code></pre></div><h4 id=\"2-1-4-初始化-tsconfig-json-文件\"><a href=\"#2-1-4-初始化-tsconfig-json-文件\" class=\"headerlink\" title=\"2.1.4. 初始化 tsconfig.json 文件\"></a>2.1.4. 初始化 tsconfig.json 文件</h4><p>在进行 TypeScript 开发时，我们会针对 TypeScript 进行相关的配置，而这些配置信息是存放在一个 tsconfig.json 文件中的。</p>\n<p>我们并不需要手动去创建它，可以通过命令行直接来生成这样的一个文件：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">tsc</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">--init</span></span></code></pre></div><h4 id=\"2-1-5-配置-tslint-来约束代码\"><a href=\"#2-1-5-配置-tslint-来约束代码\" class=\"headerlink\" title=\"2.1.5. 配置 tslint 来约束代码\"></a>2.1.5. 配置 tslint 来约束代码</h4><p>为了按照严格的 TypeScript 风格学习代码，这里可以加入 tslint</p>\n<p>全局安装tslint：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">tslint</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-g</span></span></code></pre></div><p>在项目中初始化tslint的配置文件：tslint.json</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">tslint</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-i</span></span></code></pre></div><h3 id=\"2-2-项目环境的Webpack\"><a href=\"#2-2-项目环境的Webpack\" class=\"headerlink\" title=\"2.2. 项目环境的Webpack\"></a>2.2. 项目环境的Webpack</h3><p>下面我们开始配置webpack相关的内容</p>\n<h4 id=\"2-2-1-安装-webpack-相关的依赖\"><a href=\"#2-2-1-安装-webpack-相关的依赖\" class=\"headerlink\" title=\"2.2.1. 安装 webpack 相关的依赖\"></a>2.2.1. 安装 webpack 相关的依赖</h4><p>使用 webpack 开发和打开：</p>\n<p>需要依赖 webpack、webpack-cli、webpack-dev-server</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">webpack</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">webpack-cli</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">webpack-dev-server</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-D</span></span></code></pre></div><h4 id=\"2-2-2-在-package-json-中添加启动命令\"><a href=\"#2-2-2-在-package-json-中添加启动命令\" class=\"headerlink\" title=\"2.2.2. 在 package.json 中添加启动命令\"></a>2.2.2. 在 package.json 中添加启动命令</h4><p>为了方便启动 webpack，我们在 package.json 中添加如下启动命令</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">&quot;scripts&quot;</span><span style=\"color: #9569EC; font-style: italic\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">&quot;test&quot;</span><span style=\"color: #9569EC; font-style: italic\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">&quot;serve&quot;</span><span style=\"color: #9569EC; font-style: italic\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">cross-env NODE_ENV=development webpack-dev-server --mode=development --config build/webpack.config.js</span><span style=\"color: #505153\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">&#125;</span></span></code></pre></div><h4 id=\"2-2-3-添加-webpack-的其他相关依赖\"><a href=\"#2-2-3-添加-webpack-的其他相关依赖\" class=\"headerlink\" title=\"2.2.3. 添加 webpack 的其他相关依赖\"></a>2.2.3. 添加 webpack 的其他相关依赖</h4><p>依赖一 ：<code>cross-env</code></p>\n<p>这里我们用到一个插件 <code>cross-env</code> ，这个插件的作用是可以在 webpack.config.js 中通过 <code>process.env.NODE_ENV</code> 来获取当前是开发还是生产环境，我们需要这个插件：<code>cross-env</code></p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">cross-env</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-D</span></span></code></pre></div><p>依赖二 ：<code>ts-loader</code></p>\n<p>因为我们需要解析.ts文件，所以需要依赖对应的loader：<code>ts-loader</code></p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">ts-loader</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-D</span></span></code></pre></div><p>依赖三 ：<code>html-webpack-plugin</code></p>\n<p>编译后的代码需要对应的 html 模块作为它的运行环境，所以我们需要使用 html-webpack-plugin 来将它插入到对应的模板中：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">install</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">html-webpack-plugin</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">-D</span></span></code></pre></div><h4 id=\"2-2-4-配置-webpack-config-js-文件\"><a href=\"#2-2-4-配置-webpack-config-js-文件\" class=\"headerlink\" title=\"2.2.4. 配置 webpack.config.js 文件\"></a>2.2.4. 配置 webpack.config.js 文件</h4><p>将如下配置到webpack.config.js文件中：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> HtmlWebpackPlugin </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">require</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">html-webpack-plugin</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> path </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">require</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">path</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9569EC; font-style: italic\">module</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC; font-style: italic\">exports</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  entry</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">./src/main.ts</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  output</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    filename</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">build.js</span><span style=\"color: #505153\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  resolve</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    extensions</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">.tsx</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">.ts</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">.js</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">]</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  module</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    rules</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        test</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">/</span><span style=\"color: #CCCCCC\">\\.tsx</span><span style=\"color: #9569EC\">?$</span><span style=\"color: #505153\">/</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        use</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">ts-loader</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        exclude</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">/</span><span style=\"color: #CCCCCC\">node_modules</span><span style=\"color: #505153\">/</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">]</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  devtool</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">process</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">env</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">NODE_ENV </span><span style=\"color: #9569EC\">===</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">production</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">?</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">false</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">inline-source-map</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  devServer</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    static</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      directory</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">path</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">resolve</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">__dirname</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">dist</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">)</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    client</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      logging</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">error</span><span style=\"color: #505153\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    compress</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC; font-style: italic\">false</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    host</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">localhost</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    port</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">8080</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  plugins</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">[</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">new</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">HtmlWebpackPlugin</span><span style=\"color: #505153\">(&#123;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      template</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">./index.html</span><span style=\"color: #505153\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">]</span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;;</span></span></code></pre></div><h3 id=\"2-3-项目环境下代码测试\"><a href=\"#2-3-项目环境下代码测试\" class=\"headerlink\" title=\"2.3. 项目环境下代码测试\"></a>2.3. 项目环境下代码测试</h3><p>下面我们就可以愉快的在main.ts中编写代码，之后只需要启动服务即可：</p>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">message</span><span style=\"color: #9569EC\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">string</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Hello World</span><span style=\"color: #505153\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">message</span><span style=\"color: #505153\">)</span></span></code></pre></div><p>在终端中启动服务：</p>\n<div class=\"language-bash\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">bash</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">npm</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">run</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #CCCCCC\">serve</span></span></code></pre></div><p>之后修改代码，直接可以看到修改后的效果，不需要手动进行任何刷新。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>学如逆水行舟，不进则退</p>\n<hr>\n<p>谢谢款待</p>\n<p><code>2023</code> <code>09</code> <code>07</code></p>\n","text":"前言学习任何的开发，我们都需要对应的环境：包括TypeScript的编译环境和开发工具。 我们就来完成它们的搭建，后续就可以愉快的来写TypeScript代码了...","permalink":"/post/TypeScript【二】使用Webpack搭建环境","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":4,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript 入门","slug":"TypeScript-入门","count":4,"path":"api/tags/TypeScript-入门.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">1. 环境搭建</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-TypeScript%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1.1. TypeScript环境安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-tsc%E7%AE%80%E5%8D%95%E4%BB%A3%E7%A0%81%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">1.2. tsc简单代码测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">2. 项目环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E7%9A%84%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.1. 项目环境的基础配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-1-%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2.1.1. 创建一个简单的项目目录结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-2-%E4%BD%BF%E7%94%A8npm%E7%AE%A1%E7%90%86%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">2.1.2. 使用npm管理项目的依赖</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-3-%E6%9C%AC%E5%9C%B0%E4%BE%9D%E8%B5%96-TypeScript\"><span class=\"toc-text\">2.1.3. 本地依赖 TypeScript</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-4-%E5%88%9D%E5%A7%8B%E5%8C%96-tsconfig-json-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2.1.4. 初始化 tsconfig.json 文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-5-%E9%85%8D%E7%BD%AE-tslint-%E6%9D%A5%E7%BA%A6%E6%9D%9F%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">2.1.5. 配置 tslint 来约束代码</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E7%9A%84Webpack\"><span class=\"toc-text\">2.2. 项目环境的Webpack</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-1-%E5%AE%89%E8%A3%85-webpack-%E7%9B%B8%E5%85%B3%E7%9A%84%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">2.2.1. 安装 webpack 相关的依赖</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-2-%E5%9C%A8-package-json-%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2.2.2. 在 package.json 中添加启动命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-3-%E6%B7%BB%E5%8A%A0-webpack-%E7%9A%84%E5%85%B6%E4%BB%96%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">2.2.3. 添加 webpack 的其他相关依赖</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-4-%E9%85%8D%E7%BD%AE-webpack-config-js-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2.2.4. 配置 webpack.config.js 文件</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E4%B8%8B%E4%BB%A3%E7%A0%81%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">2.3. 项目环境下代码测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol>","author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"TypeScript【三】定义变量和数据类型","uid":"3a056f889a88e7c415c2526b3ac8783b","slug":"TypeScript【三】定义变量和数据类型","date":"2023-09-08T02:34:03.000Z","updated":"2024-02-09T04:51:48.517Z","comments":true,"path":"api/articles/TypeScript【三】定义变量和数据类型.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c5af439f345e8d03dbbd4f.jpg","text":"前言学习如何在 TypeScript 中定义变量，以及 JavaScript 类型在 TypeScript 中的变化以及 TypeScript 中新增的类型。 ...","permalink":"/post/TypeScript【三】定义变量和数据类型","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":4,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript 入门","slug":"TypeScript-入门","count":4,"path":"api/tags/TypeScript-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"feature":true},"next_post":{"title":"TypeScript【一】TypeScript培养类型思维","uid":"fe45d9911f5fa4623963bc931676390e","slug":"TypeScript【一】TypeScript培养类型思维","date":"2023-09-06T04:00:00.000Z","updated":"2024-02-09T04:51:36.348Z","comments":true,"path":"api/articles/TypeScript【一】TypeScript培养类型思维.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c5af439f345e8d03dbbd4f.jpg","text":"前言 当你点开这篇文章时，我相信你已经在很多地方都已经听说过或者见过 TypeScript 了。 但是可能对 TypeScript 依然有很多问号：TypeSc...","permalink":"/post/TypeScript【一】TypeScript培养类型思维","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":4,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript 入门","slug":"TypeScript-入门","count":4,"path":"api/tags/TypeScript-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}}}