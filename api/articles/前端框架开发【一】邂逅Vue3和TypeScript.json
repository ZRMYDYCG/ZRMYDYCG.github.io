{"title":"前端框架开发【一】邂逅Vue3和TypeScript","uid":"855e657882f14bd8507dfda3eeaac0bb","slug":"前端框架开发【一】邂逅Vue3和TypeScript","date":"2023-09-10T02:55:21.000Z","updated":"2024-02-11T03:07:52.447Z","comments":true,"path":"api/articles/前端框架开发【一】邂逅Vue3和TypeScript.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","content":"<h2 id=\"1-为什么要学习-Vue？\"><a href=\"#1-为什么要学习-Vue？\" class=\"headerlink\" title=\"1. 为什么要学习 Vue？\"></a>1. 为什么要学习 Vue？</h2><h3 id=\"1-1-三个框架的对比\"><a href=\"#1-1-三个框架的对比\" class=\"headerlink\" title=\"1.1. 三个框架的对比\"></a>1.1. 三个框架的对比</h3><p>当你学习到这里的，我就默认你已经知道了前端现在流行的三大框架：Vue、React、Angular</p>\n<ul>\n<li><p>Angular：入门门槛相对会比较高，所以在国内无论是开发者还是使用的公司都是较少的，当然它本身是一个非常优秀的框架。</p>\n</li>\n<li><p>React：在国内外市场占有率都非常高（尤其在国外，待会儿我们会看到数据对比），也是前端开发者必须要掌握的一个框架。</p>\n</li>\n<li><p>Vue：在国内的市场占有率是最高的，是国内前端开发者必须要学习的一个框架，几乎所有的前端岗位都对Vue有要求。</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65c5bc3a9f345e8d03f52a64.jpg\"></p>\n<h3 id=\"1-2-框架的数据对比\"><a href=\"#1-2-框架的数据对比\" class=\"headerlink\" title=\"1.2. 框架的数据对比\"></a>1.2. 框架的数据对比</h3><p><strong>Google指数</strong></p>\n<p>我们通过Google指数（中国）可以看出：使用Vue的人数依然是最高的，其次是React，Angular人数是最少的。</p>\n<p>当然国内的程序员使用的Google是较少数的，更多使用的是百度，所以我们再来看一下百度指数。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65c5bc8a9f345e8d03f5c998.jpg\"></p>\n<p><strong>百度指数</strong></p>\n<p>从百度指数我们可以看出：Vue是遥遥领先的，其次是React，再次是Angular。</p>\n<p>当然这些指数只能反映开发者搜索这些关键字的频率，从侧面反映对应框架的热门程度。</p>\n<p><img src=\"https://pic.imgdb.cn/item/65c5bcb99f345e8d03f635b2.jpg\"></p>\n<p><strong>npm下载量</strong></p>\n<p>如果我们从npm下载量来观察，会发现React是遥遥领先的：</p>\n<ul>\n<li><p>这是因为npm下载量反映的是全球框架的使用频率。</p>\n</li>\n<li><p>我们刚才有提到，React事实上在国外是更加的流行，所以React从世界的角度来看，下载量也是最高的。</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65c5bcd89f345e8d03f6716f.jpg\"></p>\n<p><strong>GitHub Star</strong></p>\n<p>如果我们来看GitHub上的Star：Vue的star是排第一的，当然这也是和国内使用Vue的人数非常多有关系，React排在第二，Angular排在第三。</p>\n<h3 id=\"1-3-谁是最好的前端框架？\"><a href=\"#1-3-谁是最好的前端框架？\" class=\"headerlink\" title=\"1.3. 谁是最好的前端框架？\"></a>1.3. 谁是最好的前端框架？</h3><p>那么在对比完之后，三个框架中到底谁才是最好的框架呢？</p>\n<ul>\n<li><p>当然，这个问题很难有一个结论，我也不会给出结论；</p>\n</li>\n<li><p>因为这是一个仁者见仁智者见智的问题，也在很多地方会被争论不休；</p>\n</li>\n<li><p>就像很多人喜欢争论谁才是世界上最好的语言一样；</p>\n</li>\n<li><p>另外，争论这个话题是没有意义的，争论不休的话题；</p>\n</li>\n</ul>\n<p>但是，我们可以从现实的角度分析一下一些问题，比如：学习哪一门语言更容易找到工作？</p>\n<ul>\n<li><p>找后端的工作：优先推荐Java、其次推荐Go、再次推荐Node（JavaScript），可能不推荐PHP、C#；</p>\n</li>\n<li><p>目前在国内后端开发必然是首推Java的，所以也有很多的大公司慢慢将技术栈转向了Go；</p>\n</li>\n<li><p>而类似于PHP、C#已经在慢慢的退出历史舞台；</p>\n</li>\n<li><p>找前端的工作：优先推荐JavaScript（TypeScript）、其次Flutter、再次Android（Java、Kotlin）、iOS（OC、Swift）；</p>\n</li>\n<li><p>如果找前端工作，必须要学好JavaScript，其次是一些矿平台的方案；</p>\n</li>\n<li><p>而原生的Android和iOS开发的市场确确实实在慢慢的变小；</p>\n</li>\n<li><p>也有很多的其他方向：游戏开发、人工智能、算法工程师等等；</p>\n</li>\n</ul>\n<p>那么，就前端来说，学习了HTML、CSS、JavaScript，哪一个框架更容易找到工作？</p>\n<ul>\n<li><p>如果去国外找工作，优先推荐React、其次是Vue和Angular，不推荐jQuery了；</p>\n</li>\n<li><p>如果在国内找工作，优先推荐、必须学习Vue，其次是React，其次是Angular，不推荐jQuery了；</p>\n</li>\n</ul>\n<h2 id=\"2-是时候学习-Vue3-了吗？\"><a href=\"#2-是时候学习-Vue3-了吗？\" class=\"headerlink\" title=\"2. 是时候学习 Vue3 了吗？\"></a>2. 是时候学习 Vue3 了吗？</h2><p>在2020年的9月19日，万众期待的Vue3终于发布了正式版，命名为<strong>One Piece</strong>。</p>\n<ul>\n<li>它也带来了很多新的特性：更好的性能、更小的包体积、更好的TypeScript集成、更优秀的API设计。</li>\n</ul>\n<h3 id=\"2-1-Vue3的新变化\"><a href=\"#2-1-Vue3的新变化\" class=\"headerlink\" title=\"2.1. Vue3的新变化\"></a>2.1. Vue3的新变化</h3><p><strong>更现代化的源码管理方式</strong></p>\n<p>Vue3对项目管理的管理进行了重大的重构，采用了monorepo的方式来进行管理：</p>\n<ul>\n<li><p>mono是单个的意思，repo是repository仓库的简写。</p>\n</li>\n<li><p>主要的含义是将许多项目的代码存储在同一个repository中。</p>\n</li>\n</ul>\n<p>我们来看下面的图片，对比vue2和vue3源码的不同管理方式：</p>\n<ul>\n<li><p>Vue2.x是将所有的源代码编写到了src的目录下，并且依照不同的功能划分成了多个文件夹，比如compiler是和模板编译相关的，core是通用的核心运行时代码等。</p>\n</li>\n<li><p>Vue3.x是将不同的模块拆分到不同packages下的子目录中，并且每一个模块都可以看成是一个独立的项目。</p>\n</li>\n<li><p>这个独立的项目可以有自己的类型定义、自己的API、自己的测试用例。</p>\n</li>\n<li><p>这样每一个模块的划分更加清晰，开发者更容易阅读、理解、修改模块的代码，也提供了代码的可维护性、可扩展性。</p>\n</li>\n<li><p>并且每一个模块可以单独的进行编译，而无需从大量的src代码中抽离出一部分代码。</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65c5bd5d9f345e8d03f776c7.jpg\"></p>\n<p>目前很多的开源项目都是采用monorepo的方式来开发的：</p>\n<ul>\n<li><p>比如Vue3、React、Babel、Element-Plus等等。</p>\n</li>\n<li><p>当然也有很多的框架并不是，比如webpack。</p>\n</li>\n</ul>\n<p><strong>代码使用TypeScript进行了重构</strong></p>\n<p>待会儿我们也会讲到为什么需要使用TypeScript，但是我先知道一下Vue3已经全部使用TypeScript对源代码进行重写。</p>\n<ul>\n<li><p>在Vue2.x的时候，它是使用Flow来进行类型的检测，但是Flow有很多的复杂场景是类型的支持并不是非常友好。</p>\n</li>\n<li><p>所以在Vue3.x开始，整个项目全部使用了TypeScript进行重构，并且Vue3.x本身对TypeScript的支持也变得更加友好了。</p>\n</li>\n</ul>\n<p><strong>使用Proxy进行数据劫持</strong></p>\n<p>在Vue2.x的时候，Vue是使用Object.defineProperty来劫持数据的getter和setter方法的。</p>\n<ul>\n<li><p>这种方式一直存在一个缺陷就是当给对象添加或者删除属性时，是无法劫持和监听的。</p>\n</li>\n<li><p>所以在Vue2.x的时候，不得不提供一些特殊的API，比如set或delete，事实上都是一些hack方法，也增加了开发者学习新的API的成本。</p>\n</li>\n</ul>\n<p>而在Vue3.x开始，Vue使用Proxy来实现数据的劫持。</p>\n<p><strong>编译阶段的优化</strong></p>\n<p>Vue3在编译阶段进行了很多的优化：</p>\n<ul>\n<li><p>生成Block Tree：在编译阶段对静态模板进行分析，生成Block Tree（具体是干嘛的，后面讲原理再讲）。</p>\n</li>\n<li><p>slot编译优化：Vue3优化了slot的生成，对于非动态slot中属性的更新只会触发子组件的更新。</p>\n</li>\n<li><p>diff算法优化：Vue3相对于vue2在diff算法上也进行了优化（后续会讲解）。</p>\n</li>\n</ul>\n<p><strong>composition api</strong></p>\n<p>由Options API 到 Composition API（了解，后续课程会讲解）：</p>\n<p>在Vue2.x的时候，我们会通过Options API来描述组件对象。</p>\n<p>Options API包括data、props、methods、computed、生命周期等等这些选项。</p>\n<p>存在比较大的问题是多个逻辑可能是在不同的地方：</p>\n<ul>\n<li><p>比如created中会使用某一个method来修改data的数据，代码的内聚性非常差。</p>\n</li>\n<li><p>Composition API可以将 相关联的代码 放到同一处 进行处理，而不需要在多个Options之间寻找。</p>\n</li>\n</ul>\n<p><strong>Hooks函数增加代码的复用性：</strong></p>\n<p>在Vue2.x的时候，我们通常通过mixins在多个组件之间共享逻辑。</p>\n<p>但是有一个很大的缺陷就是 mixins也是由一大堆的Options组成的，并且多个mixins会存在命名冲突的问题。</p>\n<p>在Vue3.x中，我们可以通过Hook函数，来将一部分独立的逻辑抽取出去，并且它们还可以做到是响应式的。</p>\n<p><strong>移除一些非必要的api</strong></p>\n<p>Vue3移除了实例上的 off 和 $once。</p>\n<p>Vue3移除了一些特性：如filter、内联模板等。</p>\n<ul>\n<li>当然有对应的替代的方案。</li>\n</ul>\n<h3 id=\"2-2-现在开始学习Vue3吗？\"><a href=\"#2-2-现在开始学习Vue3吗？\" class=\"headerlink\" title=\"2.2. 现在开始学习Vue3吗？\"></a>2.2. 现在开始学习Vue3吗？</h3><p>是时候学习Vue3了吗？</p>\n<p>在vue3刚刚发布时，很多人也是跃跃欲试，想要尝试vue3的各种新特性。</p>\n<p>但是事实上在刚刚发布的时候我们使用vue3来写demo练习是没有问题的，真正在实际业务项目中使用vue3还需要一个相对的过程；</p>\n<p>包括vue3的进一步稳定、包括社区更多vue3相关的插件、组件库的支持和完善；</p>\n<p><strong>那么现在是否是学习vue3的时间呢？</strong></p>\n<p>答案是肯定的</p>\n<p>首先vue3在经过一系列的更新和维护后，已经是趋于稳定，并且在之前尤雨溪也宣布在今年（2021年）第二季度会将vue3作为Vue CLI的默认版本了。</p>\n<p>目前社区也经过一定时间的沉淀，更加的完善了，包括AntDesignVue、Element-Plus都提供了对Vue3的支持，所以很多公司目前新的项目都已经在使用Vue3来进行开发了。</p>\n<p>并且在面试的时候，几乎都会问到各种各样Vue3、Vite工具相关的问题。</p>\n<h2 id=\"3-为什么学习-TypeScript？\"><a href=\"#3-为什么学习-TypeScript？\" class=\"headerlink\" title=\"3. 为什么学习 TypeScript？\"></a>3. 为什么学习 TypeScript？</h2><p>TypeScript类型检测</p>\n<p>我们已经简单体会到没有类型检查带来的一些问题，JavaScript因为从设计之初就没有考虑类型的约束问题，所以造成了前端开发人员关于<strong>类型思维的缺失</strong>：</p>\n<ul>\n<li><p><strong>前端开发人员</strong>通常不关心变量或者参数是什么类型的，如果在必须确定类型时，我们往往需要使用各种判断验证；</p>\n</li>\n<li><p>从其他方向转到前端的人员，也会因为没有类型约束，而总是担心自己的代码不安全，不够健壮；</p>\n</li>\n</ul>\n<p>所以我们经常会说JavaScript<strong>不适合开发大型项目</strong>，因为当项目一旦庞大起来，这种宽松的类型约束会带来非常多的安全隐患，多人员开发往往也增加很大的沟通成本。</p>\n<ul>\n<li><p>比如当我们去实现一个核心类库时，如果没有类型约束，那么需要对别人传入的参数进行各种验证来保证我们代码的健壮性；</p>\n</li>\n<li><p>比如我们去调用别人的函数，对方没有对函数进行任何的注释，我们只能去看里面的逻辑来理解这个函数需要传入什么参数，返回值是什么类型。</p>\n</li>\n</ul>\n<p><strong>为了弥补JavaScript类型约束上的缺陷，增加类型约束，很多公司推出了自己的方案：</strong></p>\n<ul>\n<li><p>2014年，Facebook推出了flow来对JavaScript进行类型检查；</p>\n</li>\n<li><p>同年，Microsoft微软也推出了TypeScript1.0版本；</p>\n</li>\n<li><p>他们都致力于为JavaScript提供类型检查；</p>\n</li>\n</ul>\n<p>而在所有的方案中，无疑TypeScript是最优秀的，也是目前使用最广泛的：</p>\n<ul>\n<li><p>Vue3.x已经全线转向TypeScript，几乎所有的代码都使用TypeScript进行了重构；</p>\n</li>\n<li><p>而Angular在很早期就使用TypeScript进行了项目重构，并且项目也需要使用TypeScript来进行开发；</p>\n</li>\n<li><p>包括React使用最多的组件库Ant Design也是全面使用的TypeScript；</p>\n</li>\n<li><p>目前很多的公司项目都是使用Vue+TypeScript、React+TypeScript、Angular+TypeScript；</p>\n</li>\n<li><p>包括最新的Vue3中也提供了更好的对TypeScript的支持；</p>\n</li>\n</ul>\n<p>所以对于前端工程师来说，TypeScript也是必须要掌握的技能。</p>\n<hr>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>学如逆水行舟，不进则退</p>\n<p><code>2023</code> <code>09</code> <code>10</code></p>\n","text":"1. 为什么要学习 Vue？1.1. 三个框架的对比当你学习到这里的，我就默认你已经知道了前端现在流行的三大框架：Vue、React、Angular Angul...","permalink":"/post/前端框架开发【一】邂逅Vue3和TypeScript","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0-Vue%EF%BC%9F\"><span class=\"toc-text\">1. 为什么要学习 Vue？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E4%B8%89%E4%B8%AA%E6%A1%86%E6%9E%B6%E7%9A%84%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">1.1. 三个框架的对比</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E6%A1%86%E6%9E%B6%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">1.2. 框架的数据对比</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E8%B0%81%E6%98%AF%E6%9C%80%E5%A5%BD%E7%9A%84%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%EF%BC%9F\"><span class=\"toc-text\">1.3. 谁是最好的前端框架？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%98%AF%E6%97%B6%E5%80%99%E5%AD%A6%E4%B9%A0-Vue3-%E4%BA%86%E5%90%97%EF%BC%9F\"><span class=\"toc-text\">2. 是时候学习 Vue3 了吗？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-Vue3%E7%9A%84%E6%96%B0%E5%8F%98%E5%8C%96\"><span class=\"toc-text\">2.1. Vue3的新变化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E7%8E%B0%E5%9C%A8%E5%BC%80%E5%A7%8B%E5%AD%A6%E4%B9%A0Vue3%E5%90%97%EF%BC%9F\"><span class=\"toc-text\">2.2. 现在开始学习Vue3吗？</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AD%A6%E4%B9%A0-TypeScript%EF%BC%9F\"><span class=\"toc-text\">3. 为什么学习 TypeScript？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol>","author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前端框架开发【二】邂逅Vue3开发","uid":"3518b8ecf99ea2129ef5e3325fd10d77","slug":"前端框架开发【二】邂逅Vue3开发","date":"2023-09-11T02:55:49.000Z","updated":"2024-02-11T03:08:28.533Z","comments":true,"path":"api/articles/前端框架开发【二】邂逅Vue3开发.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","text":"1. 认识Vue.js1.1. 认识VueVue (读音 &#x2F;vjuː&#x2F;，类似于 view) 是一套用于构建用户界面的渐进式框架。 什么是渐进...","permalink":"/post/前端框架开发【二】邂逅Vue3开发","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}},"next_post":{"title":"TypeScript【四】接口interface使用详解","uid":"efa903f91a28565d8dca46166c5eaa96","slug":"TypeScript【四】接口interface使用详解","date":"2023-09-09T04:30:47.000Z","updated":"2024-02-09T04:51:56.476Z","comments":true,"path":"api/articles/TypeScript【四】接口interface使用详解.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c5af439f345e8d03dbbd4f.jpg","text":"前言接口是TypeScript中一个非常重要的概念，在其他很多语言中已经有了并且被大量使用。 1. 为什么要使用接口1.1. JavaScript存在的问题我们...","permalink":"/post/TypeScript【四】接口interface使用详解","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":4,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript 入门","slug":"TypeScript-入门","count":4,"path":"api/tags/TypeScript-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}}}