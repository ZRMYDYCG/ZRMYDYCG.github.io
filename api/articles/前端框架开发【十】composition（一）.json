{"title":"前端框架开发【十】composition（一）","uid":"7ea0d0a25296fecfc2775c6b0c4b12cc","slug":"前端框架开发【十】composition（一）","date":"2023-09-21T03:46:16.000Z","updated":"2024-02-15T03:55:41.734Z","comments":true,"path":"api/articles/前端框架开发【十】composition（一）.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","content":"<h2 id=\"一、认识Composition-API\"><a href=\"#一、认识Composition-API\" class=\"headerlink\" title=\"一、认识Composition API\"></a>一、认识Composition API</h2><p>在Vue2中，我们编写组件的方式是Options API：</p>\n<ul>\n<li><p>Options API的一大特点就是在对应的属性中编写对应的功能模块；</p>\n</li>\n<li><p>比如data定义数据、methods中定义方法、computed中定义计算属性、watch中监听属性改变，也包括生命周期钩子；</p>\n</li>\n</ul>\n<p>但是这种代码有一个很大的弊端：</p>\n<ul>\n<li><p>当我们实现某一个功能时，这个功能对应的代码逻辑会被拆分到各个属性中</p>\n</li>\n<li><p>当我们组件变得更大、更复杂时，逻辑关注点的列表就会增长，那么同一个功能的逻辑就会被拆分的很分散</p>\n</li>\n<li><p>尤其对于那些一开始没有编写这些组件的人来说，这个组件的代码是难以阅读和理解的（阅读组件的其他人）</p>\n</li>\n</ul>\n<p>下面我们来看一个非常大的组件，其中的逻辑功能按照颜色进行了划分：</p>\n<ul>\n<li><p>这种碎片化的代码使用理解和维护这个复杂的组件变得异常困难，并且隐藏了潜在的逻辑问题</p>\n</li>\n<li><p>并且当我们处理单个逻辑关注点时，需要不断的 <code>跳转</code> 到响应的代码块中</p>\n</li>\n</ul>\n<p>如果我们能将同一个逻辑关注点相关的代码收集在一起会更好，这就是Composition API想要做的事情，以及可以帮助我们完成的事情。</p>\n<p>那么既然知道Composition API想要帮助我们做什么事情，接下来看一下到底是怎么做呢？</p>\n<ul>\n<li><p>为了开始使用Composition API，我们需要有一个可以实际使用它（编写代码）的地方</p>\n</li>\n<li><p>在Vue组件中，这个位置就是 <code>setup</code> 函数</p>\n</li>\n</ul>\n<h2 id=\"二、setup-函数基本使用\"><a href=\"#二、setup-函数基本使用\" class=\"headerlink\" title=\"二、setup 函数基本使用\"></a>二、setup 函数基本使用</h2><p>setup其实就是组件的另外一个选项：</p>\n<ul>\n<li><p>只不过这个选项强大到我们可以用它来替代之前所编写的大部分其他选项</p>\n</li>\n<li><p>比如methods、computed、watch、data、生命周期等等</p>\n</li>\n</ul>\n<h3 id=\"2-1-setup函数的参数\"><a href=\"#2-1-setup函数的参数\" class=\"headerlink\" title=\"2.1. setup函数的参数\"></a>2.1. setup函数的参数</h3><p>我们先来研究一个setup函数的参数，它主要有两个参数：</p>\n<ul>\n<li><p>第一个参数：props</p>\n</li>\n<li><p>第二个参数：context</p>\n</li>\n</ul>\n<p>props非常好理解，它其实就是父组件传递过来的属性会被放到props对象中，我们在setup中如果需要使用，那么就可以直接通过props参数获取。</p>\n<p>我们来看一个ShowMessage.vue的组件：</p>\n<ul>\n<li><p>这个组件接受一个message的props；</p>\n</li>\n<li><p>对于定义props的类型，我们还是和之前的规则是一样的，在props选项中定义；</p>\n</li>\n<li><p>并且在template中依然是可以正常去使用props中的message的；</p>\n</li>\n<li><p>如果我们在setup函数中想要使用props，那么不可以通过 <code>this</code> 去获取（后面我会讲到为什么）；</p>\n</li>\n<li><p>因为props有直接作为参数传递到setup函数中，所以我们可以直接通过参数来使用即可</p>\n</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;message&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        props</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            message</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> String  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">props</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">props</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">message</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>另外一个参数是context，我们也称之为是一个SetupContext，它里面包含三个属性：</p>\n<ul>\n<li><p>attrs：所有的非prop的attribute</p>\n</li>\n<li><p>slots：父组件传递过来的插槽（这个在以渲染函数返回时会有作用，后面会讲到）</p>\n</li>\n<li><p>emit：当我们组件内部需要发出事件时会用到emit（因为我们不能访问this，所以不可以通过 <code>this.$emit</code>发出事件）</p>\n</li>\n</ul>\n<p>在App.vue中按照如下方式使用 ShowMessage.vue 组件：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">show-message</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">message</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Hello World</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">id</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">class</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">kobe</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">#default</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">                </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">span</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">哈哈哈</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">span</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">#content</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">                </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">span</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">呵呵呵</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">span</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">show-message</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>我们在ShowMessage.vue中获取传递过来的内容：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    props</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        message</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> String  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">props</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">context</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">props</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">message</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 获取attrs  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">context</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">attrs</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">id</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">context</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">attrs</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">class</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">context</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">slots</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">default</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">context</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">slots</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">content</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">context</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">emit</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>当然，目前我们并没有具体演示slots和emit的用法：</p>\n<ul>\n<li><p>slots会在render函数时使用</p>\n</li>\n<li><p>emit会在组件内发出事件时使用</p>\n</li>\n</ul>\n<h3 id=\"2-2-setup函数的返回值\"><a href=\"#2-2-setup函数的返回值\" class=\"headerlink\" title=\"2.2. setup函数的返回值\"></a>2.2. setup函数的返回值</h3><p>setup既然是一个函数，那么它也可以有返回值，它的返回值用来做什么呢？</p>\n<ul>\n<li><p>setup的返回值可以在模板template中被使用</p>\n</li>\n<li><p>也就是说我们可以通过setup的返回值来替代data选项</p>\n</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;name&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    props</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        message</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> String  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">props</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">context</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">100</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        counter  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>甚至是我们可以返回一个执行函数来代替在methods中定义的方法：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;name&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">decrement</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">-1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    props</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        message</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> String  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">props</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">context</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> counter </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">100</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">decrement</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">decrement</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            counter</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            decrement  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>但是，如果我们将 <code>counter</code> 在 <code>increment</code> 或者 <code>decrement</code>进行操作时，是否可以实现界面的响应式呢？</p>\n<ul>\n<li><p>答案是不可以</p>\n</li>\n<li><p>这是因为对于一个定义的变量来说，默认情况下，Vue并不会跟踪它的变化，来引擎界面的响应式操作</p>\n</li>\n</ul>\n<p>那么我们应该怎么做呢？接下来我们就学习一下setup中数据的响应式。</p>\n<h3 id=\"2-3-setup函数的this\"><a href=\"#2-3-setup函数的this\" class=\"headerlink\" title=\"2.3. setup函数的this\"></a>2.3. setup函数的this</h3><p>官方关于this有这样一段描述（这段描述是王老师给官方提交了PR之后的一段描述）：</p>\n<ul>\n<li><p>表达的含义是this并没有指向当前组件实例</p>\n</li>\n<li><p>并且在setup被调用之前，data、computed、methods等都没有被解析</p>\n</li>\n<li><p>所以无法在setup中获取this</p>\n</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65cce56a9f345e8d03f25c62.jpg\"></p>\n<p>其实在之前的这段描述是和源码有出入的（王老师向官方提交了PR，做出了描述的修改）：</p>\n<ul>\n<li><p>之前的描述大概含义是不可以使用this是因为组件实例还没有被创建出来</p>\n</li>\n<li><p>后来王老师的PR也有被合并到官方文档中</p>\n</li>\n</ul>\n<h2 id=\"三、setup数据的响应式\"><a href=\"#三、setup数据的响应式\" class=\"headerlink\" title=\"三、setup数据的响应式\"></a>三、setup数据的响应式</h2><h3 id=\"3-1-reactive-API\"><a href=\"#3-1-reactive-API\" class=\"headerlink\" title=\"3.1. reactive API\"></a>3.1. reactive API</h3><p>如果想为在setup中定义的数据提供响应式的特性，那么我们可以使用reactive的函数：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;state.name&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">当前计数: </span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;state.counter&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">increment</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">+1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">decrement</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">-1</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> reactive </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            counter</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">100</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">increment</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #9569EC\">++</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">decrement</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">counter</span><span style=\"color: #9569EC\">--</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            state</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            increment</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            decrement  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>也就是我们按照如下的方式在setup中使用数据，就可以让数据变成响应式的了：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> reactive </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 响应式状态  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  count</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">0</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;)</span></span></code></pre></div><p>那么这是什么原因呢？为什么就可以变成响应式的呢？</p>\n<ul>\n<li><p>这是因为当我们使用reactive函数处理我们的数据之后，数据再次被使用时就会进行依赖收集</p>\n</li>\n<li><p>当数据发生改变时，所有收集到的依赖都是进行对应的响应式操作（比如更新界面）</p>\n</li>\n<li><p>事实上，我们编写的data选项，也是在内部交给了reactive函数将其编程响应式对象的</p>\n</li>\n</ul>\n<h3 id=\"3-2-ref-API\"><a href=\"#3-2-ref-API\" class=\"headerlink\" title=\"3.2. ref API\"></a>3.2. ref API</h3><p>reactive API对传入的类型是有限制的，它要求我们必须传入的是一个对象或者数组类型：</p>\n<ul>\n<li>如果我们传入一个基本数据类型（String、Number、Boolean）会报一个警告</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65cd55d19f345e8d03d0817f.jpg\" alt=\"reactive传入基本数据类型\"></p>\n<p>这个时候Vue3给我们提供了另外一个API：ref API</p>\n<ul>\n<li><p>ref 会返回一个可变的额响应式对象，该对象作为一个 <strong>响应式的引用</strong> 维护着它内部的值，这就是ref名称的来源</p>\n</li>\n<li><p>它内部的值是在ref的 <code>value</code>  的属性中被维护的</p>\n</li>\n</ul>\n<p>接下来我们看一下Ref的API是如何使用的：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;message&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">@click</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">changeMessage</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">changeMessage</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">button</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> message </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Hello World</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeMessage</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">message</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">你好啊, 李银河</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            message</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            changeMessage  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>这里有两个注意事项：</p>\n<ul>\n<li><p>在模板中引入ref的值时，Vue会自动帮助我们进行解包操作，所以我们并不需要在模板中通过 <code>ref.value</code> 的方式来使用</p>\n</li>\n<li><p>但是在 <code>setup</code> 函数内部，它依然是一个 <code>ref引用</code>， 所以对其进行操作时，我们依然需要使用 <code>ref.value</code>的方式</p>\n</li>\n</ul>\n<p>但是，模板中的解包是浅层的解包，如果我们的代码是下面的方式：</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd56819f345e8d03d1bb55.jpg\" alt=\"深层对象不会解包\"></p>\n<p>但是，如果我们将ref放到一个reactive的属性当中，那么它会自动解包：</p>\n<p><img src=\"https://pic.imgdb.cn/item/65cd56b39f345e8d03d215e7.jpg\" alt=\"reactive对象会解包\"></p>\n<h2 id=\"四、reactive知识点补充\"><a href=\"#四、reactive知识点补充\" class=\"headerlink\" title=\"四、reactive知识点补充\"></a>四、reactive知识点补充</h2><h3 id=\"4-1-readonly\"><a href=\"#4-1-readonly\" class=\"headerlink\" title=\"4.1 readonly\"></a>4.1 readonly</h3><p>我们通过reactive或者ref可以获取到一个响应式的对象，但是某些情况下，我们传入给其他地方的这个响应式对象希望在另外一个地方被使用，但是不能被修改，这个时候如何防止这种情况的出现呢？</p>\n<ul>\n<li><p>Vue3为我们提供了readonly的方法；</p>\n</li>\n<li><p>readonly会返回原生对象的只读代理（也就是它依然是一个Proxy，这是一个proxy的set方法被劫持，并且不需要对其进行修改）；</p>\n</li>\n</ul>\n<p>在开发中常见的readonly方法会传入三个类型的参数：</p>\n<ul>\n<li><p>类型一：普通对象</p>\n</li>\n<li><p>类型二：reactive返回的对象</p>\n</li>\n<li><p>类型三：ref的对象</p>\n</li>\n</ul>\n<p>在readonly的使用过程中，有如下规则：</p>\n<ul>\n<li><p>readonly返回的对象都是不允许修改的</p>\n</li>\n<li><p>但是经过readonly处理的原来的对象是允许被修改的</p>\n</li>\n</ul>\n<p>比如 <code>const info = readonly(obj)</code>，info对象是不允许被修改的，当obj被修改时，readonly返回的对象也会被修改，但是我们不能去修改readonly返回的对象。</p>\n<ul>\n<li>其实本质上就是readonly返回的对象的setter方法被劫持了而已</li>\n</ul>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// readonly通常会传入三个类型的数据  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 1.传入一个普通对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state1 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">state1</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 2.传入reactive对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state2 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">state</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #65666B; font-style: italic\">// 3.传入ref对象  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> nameRef </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state3 </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">nameRef</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            state2</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            changeName  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>那么这个readonly有什么用呢？</p>\n<ul>\n<li>在我们传递给其他组件数据时，往往希望其他组件使用我们传递的内容，但是不允许它们修改时，就可以使用readonly了</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65cd63c49f345e8d03ec836c.jpg\" alt=\"Home中修改App的info\"></p>\n<p>这个时候我们可以传递给子组件时，使用一个readonly数据：</p>\n<ul>\n<li>子组件在修改readonly数据的时候就无法进行修改了</li>\n</ul>\n<p><img src=\"https://pic.imgdb.cn/item/65cd63ef9f345e8d03ecdcb3.jpg\" alt=\"传递readonly数据\"></p>\n<h3 id=\"4-2-isProxy\"><a href=\"#4-2-isProxy\" class=\"headerlink\" title=\"4.2 isProxy\"></a>4.2 isProxy</h3><p>检查对象是否是由 <code>reactive</code> 或 <code>readonly</code>创建的 proxy。</p>\n<h3 id=\"4-3-isReactive\"><a href=\"#4-3-isReactive\" class=\"headerlink\" title=\"4.3 isReactive\"></a>4.3 isReactive</h3><p>检查对象是否是由 <code>reactive</code>创建的响应式代理：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> reactive</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> isReactive </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">John</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">isReactive</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">state</span><span style=\"color: #505153\">))</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// -&gt; true  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>如果该代理是 <code>readonly</code> 创建的，但包裹了由 <code>reactive</code> 创建的另一个代理，它也会返回 true：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> reactive</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> isReactive</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> readonly </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">John</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 从普通对象创建的只读 proxy  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> plain </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">Mary</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">isReactive</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">plain</span><span style=\"color: #505153\">))</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// -&gt; false  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #65666B; font-style: italic\">// 从响应式 proxy 创建的只读 proxy  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> stateCopy </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">readonly</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">state</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">isReactive</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">stateCopy</span><span style=\"color: #505153\">))</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// -&gt; true  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><h3 id=\"4-4-isReadonly\"><a href=\"#4-4-isReadonly\" class=\"headerlink\" title=\"4.4 isReadonly\"></a>4.4 isReadonly</h3><p>检查对象是否是由 <code>readonly</code> 创建的只读代理。</p>\n<h3 id=\"4-5-toRaw\"><a href=\"#4-5-toRaw\" class=\"headerlink\" title=\"4.5 toRaw\"></a>4.5 toRaw</h3><p>返回 <code>reactive</code> 或 <code>readonly</code> 代理的原始对象。</p>\n<ul>\n<li><strong>不</strong>建议保留对原始对象的持久引用。请谨慎使用。</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> reactiveInfo </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">toRaw</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">reactiveInfo</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">===</span><span style=\"color: #CCCCCC\"> info</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// true</span></span></code></pre></div><h3 id=\"4-6-shallowReactive\"><a href=\"#4-6-shallowReactive\" class=\"headerlink\" title=\"4.6 shallowReactive\"></a>4.6 shallowReactive</h3><p>创建一个响应式代理，它跟踪其自身 property 的响应性，但不执行嵌套对象的深层响应式转换 (深层还是原生对象)。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">shallowReactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  foo</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  nested</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    bar</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 改变 state 本身的性质是响应式的  </span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">foo</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// ...但是不转换嵌套对象  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">isReactive</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">nested</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// false  </span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">nested</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">bar</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 非响应式</span></span></code></pre></div><h3 id=\"4-7-shallowReadonly\"><a href=\"#4-7-shallowReadonly\" class=\"headerlink\" title=\"4.7 shallowReadonly\"></a>4.7 shallowReadonly</h3><p>创建一个 proxy，使其自身的 property 为只读，但不执行嵌套对象的深度只读转换（深层还是可读、可写的）。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">shallowReadonly</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  foo</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">1</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  nested</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    bar</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">2</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 改变 state 本身的 property 将失败  </span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">foo</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// ...但适用于嵌套对象  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">isReadonly</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">nested</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// false  </span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">nested</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">bar</span><span style=\"color: #9569EC\">++</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// 可用</span></span></code></pre></div><h2 id=\"五、ref知识点补充\"><a href=\"#五、ref知识点补充\" class=\"headerlink\" title=\"五、ref知识点补充\"></a>五、ref知识点补充</h2><h3 id=\"5-1-toRefs\"><a href=\"#5-1-toRefs\" class=\"headerlink\" title=\"5.1 toRefs\"></a>5.1 toRefs</h3><p>如果我们使用ES6的解构语法，对reactive返回的对象进行解构获取值，那么之后无论是修改解构后的变量，还是修改reactive返回的state对象，数据都不再是响应式的：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">import </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> reactive </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> from &#39;vue&#39;;  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">export default </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        const state </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">reactive</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            age</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">18</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">;  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        const </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> = state;  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        const </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">;  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        return </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            age</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            changeName  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><p>那么有没有办法让我们解构出来的属性是响应式的呢？</p>\n<ul>\n<li><p>Vue为我们提供了一个toRefs的函数，可以将reactive返回的对象中的属性都转成ref</p>\n</li>\n<li><p>那么我们再次进行解构出来的 <code>name</code> 和 <code>age</code> 本身都是 ref的</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 当我们这样来做的时候, 会返回两个ref对象, 它们是响应式的  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> name</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">toRefs</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">state</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 下面两种方式来修改name都是可以的  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">name</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span></span></code></pre></div><p>这种做法相当于已经在state.name和ref.value之间建立了 <code>链接</code>，任何一个修改都会引起另外一个变化。</p>\n<h3 id=\"5-2-toRef\"><a href=\"#5-2-toRef\" class=\"headerlink\" title=\"5.2 toRef\"></a>5.2 toRef</h3><p>如果我们只希望转换一个 reactive 对象中的属性为 ref，那么可以使用 toRef 的方法</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">toRef</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">state</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">   </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> age </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> state</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeName</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">state</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span></span></code></pre></div><h3 id=\"5-3-unref\"><a href=\"#5-3-unref\" class=\"headerlink\" title=\"5.3 unref\"></a>5.3 unref</h3><p>如果我们想要获取一个ref引用中的value，那么也可以通过unref方法：</p>\n<ul>\n<li><p>如果参数是一个 <code>ref</code>，则返回内部值，否则返回参数本身</p>\n</li>\n<li><p>这是 <code>val = isRef(val) ? val.value : val</code> 的语法糖函数</p>\n</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> ref</span><span style=\"color: #61D0FF\">,</span><span style=\"color: #CCCCCC\"> unref </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">ref</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #61D0FF\">console</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #9569EC\">log</span><span style=\"color: #505153\">(</span><span style=\"color: #9569EC\">unref</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #505153\">));</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #65666B; font-style: italic\">// why</span></span></code></pre></div><h3 id=\"5-4-isRef\"><a href=\"#5-4-isRef\" class=\"headerlink\" title=\"5.4 isRef\"></a>5.4 isRef</h3><p>判断值是否是一个 ref 对象</p>\n<h3 id=\"5-5-customRef\"><a href=\"#5-5-customRef\" class=\"headerlink\" title=\"5.5 customRef\"></a>5.5 customRef</h3><p>创建一个自定义的ref，并对其依赖项跟踪和更新触发进行显示控制：</p>\n<ul>\n<li><p>它需要一个工厂函数，该函数接受 <code>track</code> 和 <code>trigger</code> 函数作为参数；</p>\n</li>\n<li><p>并且应该返回一个带有 <code>get</code> 和 <code>set</code> 的对象；</p>\n</li>\n</ul>\n<p>这里我们使用一个官方的案例：</p>\n<ul>\n<li>对双向绑定的属性进行debounce(节流)的操作；</li>\n</ul>\n<p>封装useDebouncedRef的工具Hook：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> customRef </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">vue</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">function</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useDebouncedRef</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">value</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">delay</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">200</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #DA67DA\">let</span><span style=\"color: #CCCCCC\"> timeout</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">customRef</span><span style=\"color: #505153\">((</span><span style=\"color: #61D0FF\">track</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">trigger</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">get</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">track</span><span style=\"color: #505153\">();</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> value</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #9569EC\">set</span><span style=\"color: #505153\">(</span><span style=\"color: #61D0FF\">newValue</span><span style=\"color: #505153\">)</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">clearTimeout</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">timeout</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        timeout </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">setTimeout</span><span style=\"color: #505153\">(()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          value </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> newValue</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">          </span><span style=\"color: #9569EC\">trigger</span><span style=\"color: #505153\">();</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #DA67DA\">,</span><span style=\"color: #CCCCCC\"> delay</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">      </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #505153\">&#125;)</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span></span></code></pre></div><p>在组件界面中使用：</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">input</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">v-model</span><span style=\"color: #505153\">=</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">message</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #65666B; font-style: italic\">&#123;&#123;message&#125;&#125;</span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">h2</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">div</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">template</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">import</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\"> useDebouncedRef </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">from</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#39;</span><span style=\"color: #DA67DA\">../hooks/useDebounceRef</span><span style=\"color: #505153\">&#39;</span><span style=\"color: #505153\">;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #9569EC\">export</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">default</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #9569EC\">setup</span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> message </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">useDebouncedRef</span><span style=\"color: #505153\">(</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">Hello World</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #9569EC\">return</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">            message  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">        </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">    </span><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">&lt;/</span><span style=\"color: #9569EC; font-style: italic\">script</span><span style=\"color: #DA67DA\">&gt;</span></span></code></pre></div><h3 id=\"5-6-shallowRef\"><a href=\"#5-6-shallowRef\" class=\"headerlink\" title=\"5.6 shallowRef\"></a>5.6 shallowRef</h3><p>创建一个浅层的ref对象：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">shallowRef</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 下面的修改不是响应式的  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeInfo</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">value</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">;</span></span></code></pre></div><h3 id=\"5-7-triggerRef\"><a href=\"#5-7-triggerRef\" class=\"headerlink\" title=\"5.7 triggerRef\"></a>5.7 triggerRef</h3><p>手动触发和 <code>shallowRef</code> 相关联的副作用：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki Aurora Future\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> info </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">shallowRef</span><span style=\"color: #505153\">(&#123;</span><span style=\"color: #CCCCCC\">name</span><span style=\"color: #DA67DA\">:</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">why</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #505153\">&#125;);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #65666B; font-style: italic\">// 下面的修改不是响应式的  </span></span>\n<span class=\"line\"><span style=\"color: #DA67DA\">const</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">changeInfo</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">()</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #DA67DA\">=&gt;</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&#123;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #61D0FF\">info</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #61D0FF\">value</span><span style=\"color: #DA67DA\">.</span><span style=\"color: #CCCCCC\">name </span><span style=\"color: #9569EC\">=</span><span style=\"color: #CCCCCC\"> </span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">coderwhy</span><span style=\"color: #505153\">&quot;</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #65666B; font-style: italic\">// 手动触发  </span></span>\n<span class=\"line\"><span style=\"color: #CCCCCC\">  </span><span style=\"color: #9569EC\">triggerRef</span><span style=\"color: #505153\">(</span><span style=\"color: #CCCCCC\">info</span><span style=\"color: #505153\">);</span><span style=\"color: #CCCCCC\">  </span></span>\n<span class=\"line\"><span style=\"color: #505153\">&#125;;</span></span></code></pre></div><h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>学如逆水行舟，不进则退</p>\n<p><code>2023</code> <code>09</code> <code>21</code></p>\n","text":"一、认识Composition API在Vue2中，我们编写组件的方式是Options API： Options API的一大特点就是在对应的属性中编写对应的功...","permalink":"/post/前端框架开发【十】composition（一）","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E8%AE%A4%E8%AF%86Composition-API\"><span class=\"toc-text\">一、认识Composition API</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81setup-%E5%87%BD%E6%95%B0%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">二、setup 函数基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-setup%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">2.1. setup函数的参数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-setup%E5%87%BD%E6%95%B0%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">2.2. setup函数的返回值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-setup%E5%87%BD%E6%95%B0%E7%9A%84this\"><span class=\"toc-text\">2.3. setup函数的this</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81setup%E6%95%B0%E6%8D%AE%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F\"><span class=\"toc-text\">三、setup数据的响应式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-reactive-API\"><span class=\"toc-text\">3.1. reactive API</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-ref-API\"><span class=\"toc-text\">3.2. ref API</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81reactive%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">四、reactive知识点补充</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-readonly\"><span class=\"toc-text\">4.1 readonly</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-isProxy\"><span class=\"toc-text\">4.2 isProxy</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-isReactive\"><span class=\"toc-text\">4.3 isReactive</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-4-isReadonly\"><span class=\"toc-text\">4.4 isReadonly</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-toRaw\"><span class=\"toc-text\">4.5 toRaw</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-6-shallowReactive\"><span class=\"toc-text\">4.6 shallowReactive</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-7-shallowReadonly\"><span class=\"toc-text\">4.7 shallowReadonly</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81ref%E7%9F%A5%E8%AF%86%E7%82%B9%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">五、ref知识点补充</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-toRefs\"><span class=\"toc-text\">5.1 toRefs</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-toRef\"><span class=\"toc-text\">5.2 toRef</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-unref\"><span class=\"toc-text\">5.3 unref</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-4-isRef\"><span class=\"toc-text\">5.4 isRef</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-5-customRef\"><span class=\"toc-text\">5.5 customRef</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-6-shallowRef\"><span class=\"toc-text\">5.6 shallowRef</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-7-triggerRef\"><span class=\"toc-text\">5.7 triggerRef</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">结语</span></a></li></ol>","author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前端框架开发【十一】composition（二）","uid":"30138beaa440aeddcd79302712686770","slug":"前端框架开发【十一】composition（二）","date":"2023-09-22T03:46:36.000Z","updated":"2024-02-15T03:55:28.526Z","comments":true,"path":"api/articles/前端框架开发【十一】composition（二）.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","text":"一、computed在前面我们讲解过计算属性computed：当我们的某些属性是依赖其他状态时，我们可以使用计算属性来处理 在前面的Options API中，我...","permalink":"/post/前端框架开发【十一】composition（二）","photos":[],"count_time":{"symbolsCount":"41k","symbolsTime":"37 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}},"next_post":{"title":"前端框架开发【九】实现过渡动画","uid":"90b0cd7f9ee3294d68bd40236729dc06","slug":"前端框架开发【九】实现过渡动画","date":"2023-09-20T02:57:36.000Z","updated":"2024-02-11T03:11:18.265Z","comments":true,"path":"api/articles/前端框架开发【九】实现过渡动画.json","keywords":null,"cover":"https://pic.imgdb.cn/item/65c839ff9f345e8d03c8fec9.jpg","text":"1. 基本过渡动画1.1. 认识过渡动画在开发中，我们想要给一个组件的显示和消失添加某种过渡动画，可以很好的增加用户体验： React框架本身并没有提供任何动画...","permalink":"/post/前端框架开发【九】实现过渡动画","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"VUE","slug":"VUE","count":11,"path":"api/categories/VUE.json"}],"tags":[{"name":"VUE 入门","slug":"VUE-入门","count":11,"path":"api/tags/VUE-入门.json"}],"author":{"name":"一小池勺","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/65c339bd9f345e8d03bb301d.jpg","link":"/","description":"不要感受路，要赶路","socials":{"github":"https://gitee.com/zrblue","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3318213455","zhihu":"","csdn":"https://blog.csdn.net/zrblue?type=blog","juejin":"https://juejin.cn","customs":{}}}}}